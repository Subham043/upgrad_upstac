[{"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\index.js":"1","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\serviceWorker.js":"2","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\App.js":"3","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\component\\LoadingView.js":"4","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\config\\store.js":"5","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\loader\\loading-indicator-component.js":"6","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\confirm\\confirm-message-component.js":"7","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\component\\index.js":"8","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\GuardedRoute.js":"9","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\auth\\authDispatcher.js":"10","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\auth\\Register.js":"11","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\auth\\Login.js":"12","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\lab\\PendingLabTests.js":"13","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\consultation\\PendingConsultations.js":"14","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\consultation\\ConsultationHistory.js":"15","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\consultation\\UpdateConsultation.js":"16","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\lab\\LabHistory.js":"17","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\lab\\UpdateLabResult.js":"18","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\PendingApprovals.js":"19","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\ViewAllRequests.js":"20","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\AuthorityDashboard.js":"21","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\UpdateThreshold.js":"22","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\UserHistory.js":"23","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\notification\\app-notification-component.js":"24","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\documents\\UploadDocument.js":"25","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\RequestTest.js":"26","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\profile\\Profile.js":"27","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\config\\reducers.js":"28","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\loader\\loading-indicator.js":"29","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\confirm\\confirm-message-service.js":"30","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\component\\Navbar.js":"31","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\services\\http-service.js":"32","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\auth\\user.js":"33","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\environment.js":"34","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\auth\\authStore.js":"35","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\notification\\app-notification.js":"36","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\date-helpers.js":"37","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\common-helpers.js":"38","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\testRequestDispatcher.js":"39","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\RequestHistory.js":"40","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\store\\authorityStore.js":"41","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\styles\\GlobalStyles.js":"42","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\shared\\dashboard-charts.js":"43","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\shared\\authorityDispatcher.js":"44","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\shared\\view-all-request-options.js":"45","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\config\\create-reducer.js":"46","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\TestFlow.js":"47","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\shared\\authority-data-parser.js":"48","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\shared\\approval-parser.js":"49","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\shared\\pending-user-utils.js":"50","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\components\\ViewAttachmentButton.js":"51","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\components\\PendingApprovalActions.js":"52","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\ConsultationResultDetail.js":"53","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\LabResultDetail.js":"54","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\TestRequestDetail.js":"55","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\lab\\labDispatcher.js":"56","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\consultation\\consultationDispatcher.js":"57","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\index.js":"58","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\component\\LoadingView.js":"59","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\App.js":"60","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\serviceWorker.js":"61","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\config\\store.js":"62","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\confirm\\confirm-message-component.js":"63","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\loader\\loading-indicator-component.js":"64","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\component\\index.js":"65","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\GuardedRoute.js":"66","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\auth\\Login.js":"67","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\auth\\authDispatcher.js":"68","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\lab\\LabHistory.js":"69","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\auth\\Register.js":"70","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\lab\\PendingLabTests.js":"71","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\consultation\\PendingConsultations.js":"72","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\lab\\UpdateLabResult.js":"73","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\consultation\\UpdateConsultation.js":"74","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\UpdateThreshold.js":"75","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\consultation\\ConsultationHistory.js":"76","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\UserHistory.js":"77","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\ViewAllRequests.js":"78","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\AuthorityDashboard.js":"79","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\RequestTest.js":"80","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\PendingApprovals.js":"81","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\notification\\app-notification-component.js":"82","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\config\\reducers.js":"83","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\profile\\Profile.js":"84","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\documents\\UploadDocument.js":"85","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\confirm\\confirm-message-service.js":"86","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\loader\\loading-indicator.js":"87","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\component\\Navbar.js":"88","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\services\\http-service.js":"89","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\auth\\user.js":"90","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\environment.js":"91","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\notification\\app-notification.js":"92","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\RequestHistory.js":"93","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\auth\\authStore.js":"94","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\date-helpers.js":"95","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\lab\\labDispatcher.js":"96","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\styles\\GlobalStyles.js":"97","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\store\\authorityStore.js":"98","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\shared\\pending-user-utils.js":"99","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\components\\PendingApprovalActions.js":"100","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\components\\ViewAttachmentButton.js":"101","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\common-helpers.js":"102","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\testRequestDispatcher.js":"103","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\shared\\dashboard-charts.js":"104","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\shared\\authorityDispatcher.js":"105","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\config\\create-reducer.js":"106","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\shared\\view-all-request-options.js":"107","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\TestFlow.js":"108","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\shared\\approval-parser.js":"109","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\shared\\authority-data-parser.js":"110","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\ConsultationResultDetail.js":"111","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\LabResultDetail.js":"112","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\TestRequestDetail.js":"113","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\consultation\\consultationDispatcher.js":"114"},{"size":1146,"mtime":1602253122000,"results":"115","hashOfConfig":"116"},{"size":5086,"mtime":1602253122000,"results":"117","hashOfConfig":"116"},{"size":4423,"mtime":1602253122000,"results":"118","hashOfConfig":"116"},{"size":104,"mtime":1602253122000,"results":"119","hashOfConfig":"116"},{"size":875,"mtime":1602253122000,"results":"120","hashOfConfig":"116"},{"size":1409,"mtime":1602253122000,"results":"121","hashOfConfig":"116"},{"size":4216,"mtime":1602253122000,"results":"122","hashOfConfig":"116"},{"size":2377,"mtime":1602253122000,"results":"123","hashOfConfig":"116"},{"size":388,"mtime":1602253122000,"results":"124","hashOfConfig":"116"},{"size":2405,"mtime":1602253122000,"results":"125","hashOfConfig":"116"},{"size":16226,"mtime":1602253122000,"results":"126","hashOfConfig":"116"},{"size":4193,"mtime":1602253122000,"results":"127","hashOfConfig":"116"},{"size":3979,"mtime":1602253122000,"results":"128","hashOfConfig":"116"},{"size":4009,"mtime":1602253122000,"results":"129","hashOfConfig":"116"},{"size":1766,"mtime":1602253122000,"results":"130","hashOfConfig":"116"},{"size":6574,"mtime":1602253122000,"results":"131","hashOfConfig":"116"},{"size":1680,"mtime":1602253122000,"results":"132","hashOfConfig":"116"},{"size":10045,"mtime":1602253122000,"results":"133","hashOfConfig":"116"},{"size":3414,"mtime":1602253122000,"results":"134","hashOfConfig":"116"},{"size":2524,"mtime":1602253122000,"results":"135","hashOfConfig":"116"},{"size":4566,"mtime":1602253122000,"results":"136","hashOfConfig":"116"},{"size":3461,"mtime":1602253122000,"results":"137","hashOfConfig":"116"},{"size":1899,"mtime":1602253124000,"results":"138","hashOfConfig":"116"},{"size":2585,"mtime":1602253122000,"results":"139","hashOfConfig":"116"},{"size":3814,"mtime":1602253122000,"results":"140","hashOfConfig":"116"},{"size":10356,"mtime":1602253122000,"results":"141","hashOfConfig":"116"},{"size":2133,"mtime":1602253122000,"results":"142","hashOfConfig":"116"},{"size":374,"mtime":1602253122000,"results":"143","hashOfConfig":"116"},{"size":226,"mtime":1602253122000,"results":"144","hashOfConfig":"116"},{"size":442,"mtime":1602253122000,"results":"145","hashOfConfig":"116"},{"size":4621,"mtime":1602253122000,"results":"146","hashOfConfig":"116"},{"size":3935,"mtime":1602253122000,"results":"147","hashOfConfig":"116"},{"size":621,"mtime":1602253122000,"results":"148","hashOfConfig":"116"},{"size":414,"mtime":1602253122000,"results":"149","hashOfConfig":"116"},{"size":1722,"mtime":1602253122000,"results":"150","hashOfConfig":"116"},{"size":512,"mtime":1602253122000,"results":"151","hashOfConfig":"116"},{"size":394,"mtime":1602253122000,"results":"152","hashOfConfig":"116"},{"size":600,"mtime":1602253122000,"results":"153","hashOfConfig":"116"},{"size":947,"mtime":1602253124000,"results":"154","hashOfConfig":"116"},{"size":4044,"mtime":1602253122000,"results":"155","hashOfConfig":"116"},{"size":1041,"mtime":1602253122000,"results":"156","hashOfConfig":"116"},{"size":1484,"mtime":1602253122000,"results":"157","hashOfConfig":"116"},{"size":3294,"mtime":1602253122000,"results":"158","hashOfConfig":"116"},{"size":2730,"mtime":1602253122000,"results":"159","hashOfConfig":"116"},{"size":1241,"mtime":1602253122000,"results":"160","hashOfConfig":"116"},{"size":259,"mtime":1602253122000,"results":"161","hashOfConfig":"116"},{"size":4818,"mtime":1602253124000,"results":"162","hashOfConfig":"116"},{"size":3417,"mtime":1602253122000,"results":"163","hashOfConfig":"116"},{"size":482,"mtime":1602253122000,"results":"164","hashOfConfig":"116"},{"size":581,"mtime":1602253122000,"results":"165","hashOfConfig":"116"},{"size":1002,"mtime":1602253122000,"results":"166","hashOfConfig":"116"},{"size":2639,"mtime":1602253122000,"results":"167","hashOfConfig":"116"},{"size":3899,"mtime":1602253122000,"results":"168","hashOfConfig":"116"},{"size":4214,"mtime":1602253122000,"results":"169","hashOfConfig":"116"},{"size":3351,"mtime":1602253124000,"results":"170","hashOfConfig":"116"},{"size":993,"mtime":1602253122000,"results":"171","hashOfConfig":"116"},{"size":1117,"mtime":1602253122000,"results":"172","hashOfConfig":"116"},{"size":1146,"mtime":1602253122000,"results":"173","hashOfConfig":"174"},{"size":104,"mtime":1602253122000,"results":"175","hashOfConfig":"174"},{"size":4423,"mtime":1602253122000,"results":"176","hashOfConfig":"174"},{"size":5086,"mtime":1602253122000,"results":"177","hashOfConfig":"174"},{"size":875,"mtime":1602253122000,"results":"178","hashOfConfig":"174"},{"size":4216,"mtime":1602253122000,"results":"179","hashOfConfig":"174"},{"size":1409,"mtime":1602253122000,"results":"180","hashOfConfig":"174"},{"size":2377,"mtime":1602253122000,"results":"181","hashOfConfig":"174"},{"size":388,"mtime":1602253122000,"results":"182","hashOfConfig":"174"},{"size":4193,"mtime":1602253122000,"results":"183","hashOfConfig":"174"},{"size":2405,"mtime":1602253122000,"results":"184","hashOfConfig":"174"},{"size":1680,"mtime":1602253122000,"results":"185","hashOfConfig":"174"},{"size":16226,"mtime":1602253122000,"results":"186","hashOfConfig":"174"},{"size":3979,"mtime":1602253122000,"results":"187","hashOfConfig":"174"},{"size":4009,"mtime":1602253122000,"results":"188","hashOfConfig":"174"},{"size":10045,"mtime":1602253122000,"results":"189","hashOfConfig":"174"},{"size":6574,"mtime":1602253122000,"results":"190","hashOfConfig":"174"},{"size":3461,"mtime":1602253122000,"results":"191","hashOfConfig":"174"},{"size":1766,"mtime":1602253122000,"results":"192","hashOfConfig":"174"},{"size":1899,"mtime":1602253124000,"results":"193","hashOfConfig":"174"},{"size":2524,"mtime":1602253122000,"results":"194","hashOfConfig":"174"},{"size":4566,"mtime":1602253122000,"results":"195","hashOfConfig":"174"},{"size":10356,"mtime":1602253122000,"results":"196","hashOfConfig":"174"},{"size":3414,"mtime":1602253122000,"results":"197","hashOfConfig":"174"},{"size":2585,"mtime":1602253122000,"results":"198","hashOfConfig":"174"},{"size":374,"mtime":1602253122000,"results":"199","hashOfConfig":"174"},{"size":2133,"mtime":1602253122000,"results":"200","hashOfConfig":"174"},{"size":3814,"mtime":1602253122000,"results":"201","hashOfConfig":"174"},{"size":442,"mtime":1602253122000,"results":"202","hashOfConfig":"174"},{"size":226,"mtime":1602253122000,"results":"203","hashOfConfig":"174"},{"size":4621,"mtime":1602253122000,"results":"204","hashOfConfig":"174"},{"size":3935,"mtime":1602253122000,"results":"205","hashOfConfig":"174"},{"size":621,"mtime":1602253122000,"results":"206","hashOfConfig":"174"},{"size":414,"mtime":1602253122000,"results":"207","hashOfConfig":"174"},{"size":512,"mtime":1602253122000,"results":"208","hashOfConfig":"174"},{"size":4044,"mtime":1602253122000,"results":"209","hashOfConfig":"174"},{"size":1722,"mtime":1602253122000,"results":"210","hashOfConfig":"174"},{"size":394,"mtime":1602253122000,"results":"211","hashOfConfig":"174"},{"size":993,"mtime":1602253122000,"results":"212","hashOfConfig":"174"},{"size":1484,"mtime":1602253122000,"results":"213","hashOfConfig":"174"},{"size":1041,"mtime":1602253122000,"results":"214","hashOfConfig":"174"},{"size":581,"mtime":1602253122000,"results":"215","hashOfConfig":"174"},{"size":2639,"mtime":1602253122000,"results":"216","hashOfConfig":"174"},{"size":1002,"mtime":1602253122000,"results":"217","hashOfConfig":"174"},{"size":600,"mtime":1602253122000,"results":"218","hashOfConfig":"174"},{"size":947,"mtime":1602253124000,"results":"219","hashOfConfig":"174"},{"size":3294,"mtime":1602253122000,"results":"220","hashOfConfig":"174"},{"size":2730,"mtime":1602253122000,"results":"221","hashOfConfig":"174"},{"size":259,"mtime":1602253122000,"results":"222","hashOfConfig":"174"},{"size":1241,"mtime":1602253122000,"results":"223","hashOfConfig":"174"},{"size":4818,"mtime":1602253124000,"results":"224","hashOfConfig":"174"},{"size":482,"mtime":1602253122000,"results":"225","hashOfConfig":"174"},{"size":3417,"mtime":1602253122000,"results":"226","hashOfConfig":"174"},{"size":3899,"mtime":1602253122000,"results":"227","hashOfConfig":"174"},{"size":4214,"mtime":1602253122000,"results":"228","hashOfConfig":"174"},{"size":3351,"mtime":1602253124000,"results":"229","hashOfConfig":"174"},{"size":1117,"mtime":1602253122000,"results":"230","hashOfConfig":"174"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"234"},"g0tsgc",{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"234"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"234"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"234"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"234"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"234"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"234"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"234"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"234"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"234"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"234"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"234"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"234"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"234"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"234"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"234"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"234"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"234"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"234"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"234"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"234"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"234"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"234"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"234"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"234"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"234"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"234"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"234"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1j7dc2w",{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"399","messages":"400","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"401","messages":"402","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"405","messages":"406","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"407","messages":"408","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"479","messages":"480","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"481","messages":"482","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"483","messages":"484","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"485","messages":"486","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\index.js",["489","490","491"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './items.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport {PersistGate} from 'redux-persist/integration/react';\nimport { persistor, store } from './config/store';\nimport {LoadingView} from \"./component/LoadingView\";\nimport {CssBaseline, Router, UINavBar} from \"./component\";\nimport LoadingIndicatorComponent from \"./shared/loader/loading-indicator-component\";\nimport ConfirmMessageComponent from \"./shared/confirm/confirm-message-component\";\n\n\nReactDOM.render(\n     <Provider store={store}>\n          <PersistGate loading={<LoadingView/>} persistor={persistor}>\n              <CssBaseline />\n              <Router>\n              <App />\n              </Router>\n          </PersistGate>\n      </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["492","493"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\serviceWorker.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\App.js",["494","495","496","497","498","499"],"import {CssBaseline, makeStyles, React, Route, Router, Switch, UINavBar,} from \"./component\"\n\n\n\nimport './App.css';\nimport {useSelector} from \"react-redux\";\nimport {useEffect} from \"react\";\nimport {setAuthToken} from \"./auth/authDispatcher\";\nimport GuardedRoute from \"./shared/GuardedRoute\";\nimport UpdateLabResult from \"./lab/UpdateLabResult\";\nimport PendingConsultations from \"./consultation/PendingConsultations\";\nimport UpdateConsultation from \"./consultation/UpdateConsultation\";\nimport UserHistory from \"./testrequests/UserHistory\";\n\nimport UpdateThreshold from \"./authority/UpdateThreshold\";\nimport ViewAllRequests from \"./authority/ViewAllRequests\";\nimport AppNotificationComponent from \"./shared/notification/app-notification-component\";\nimport Register from \"./auth/Register\";\nimport {UploadDocument} from \"./documents/UploadDocument\";\nimport PendingApprovals from \"./authority/PendingApprovals\";\nimport LoadingIndicatorComponent from \"./shared/loader/loading-indicator-component\";\nimport ConfirmMessageComponent from \"./shared/confirm/confirm-message-component\";\nimport PendingLabTests from \"./lab/PendingLabTests\";\nimport LabHistory from \"./lab/LabHistory\";\nimport ConsultationHistory from \"./consultation/ConsultationHistory\";\nimport Profile from \"./profile/Profile\";\nimport RequestTest from \"./testrequests/RequestTest\";\nimport Login from \"./auth/Login\";\nimport AuthorityDashboard from \"./authority/AuthorityDashboard\";\nimport {Redirect} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n\n  '@global': {\n    body: {\n      backgroundColor: '#e6e6e6'\n    },\n    footer:{\n      marginTop:'calc(5% + 60px)',\n      bottom: 0\n    }\n  },\n  footer:{\n    marginTop:'calc(5% + 60px)',\n    bottom: 0\n  }\n\n\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  const {user,token,isLoggedIn,roles} = useSelector(state => state.auth);\n\n  const auth = {user,token,isLoggedIn,roles}\n\n  let  {isUser,isDoctor,isAuthority,isTester,isApproved} = roles\n\n\n\n  let homePage = '/login'\n\n  if(isLoggedIn)\n    homePage ='/profile'\n\n  useEffect(() => {\n\n\n    if(token && user){\n      setAuthToken(token)\n\n    }\n\n  }, [token]);\n\n  return (<React.Fragment>\n\n        <LoadingIndicatorComponent></LoadingIndicatorComponent>\n        <UINavBar />\n        <ConfirmMessageComponent/>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/upload-document/:role/:id\">\n            <UploadDocument />\n          </Route>\n          <GuardedRoute path='/profile' component={Profile} auth={isLoggedIn} />\n          <GuardedRoute path='/request-test' component={RequestTest} auth={isUser} />\n\n          <GuardedRoute path='/user-history' component={UserHistory} auth={isUser} />\n\n          {/*<GuardedRoute path='/test-detail/:id' component={TestDetail} auth={isLoggedIn} />*/}\n          <GuardedRoute path='/lab-history' component={LabHistory} auth={isTester} />\n\n          <GuardedRoute path='/pending-lab-tests' component={PendingLabTests} auth={isTester} />\n          <GuardedRoute path='/update-lab-report/:id' component={UpdateLabResult} auth={isTester} />\n\n\n          <GuardedRoute path='/consultation-history' component={ConsultationHistory} auth={isDoctor} />\n          <GuardedRoute path='/pending-consultations' component={PendingConsultations} auth={isDoctor} />\n          <GuardedRoute path='/update-consultation/:id' component={UpdateConsultation} auth={isDoctor} />\n\n          <GuardedRoute path='/update-thresholds' component={UpdateThreshold} auth={isAuthority} />\n          <GuardedRoute path='/pending-user-approvals' component={PendingApprovals} auth={isAuthority} />\n          <GuardedRoute path='/view-all-requests' component={ViewAllRequests} auth={isAuthority} />\n          <GuardedRoute path='/dashboard' component={AuthorityDashboard} auth={isAuthority} />\n\n\n          {/*<Route path=\"/tests-requested\">*/}\n          {/*  <TestsRequested />*/}\n          {/*</Route>*/}\n          {/*<Route path=\"/test-result\">*/}\n          {/*  <TestResult />*/}\n          {/*</Route>*/}\n          {/*<Route path=\"/take-sample\">*/}\n          {/*  <TakeSample />*/}\n          {/*</Route>*/}\n\n          <Route path=\"/\">\n            <Redirect to={homePage} />\n          </Route>\n        </Switch>\n        <AppNotificationComponent/>\n\n\n    </React.Fragment>\n\n  );\n}\n\nexport default App;\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\component\\LoadingView.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\config\\store.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\loader\\loading-indicator-component.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\confirm\\confirm-message-component.js",["500","501","502"],"import React, {Component, Fragment} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\nimport {confirmMessageService} from \"./confirm-message-service\";\r\n\r\nfunction PaperComponent(props) {\r\n    return (\r\n        <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n            <Paper {...props} />\r\n        </Draggable>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass ConfirmMessageComponent extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.classes=null\r\n        this.state = {\r\n            \"show\": false,\r\n            \"message\": '',\r\n            \"acceptCallback\":null,\r\n            \"rejectCallback\":null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.subscription = confirmMessageService.onReceive().subscribe(res => {\r\n            this.onConfirmationReceived(res);\r\n        })\r\n    }\r\n\r\n    onConfirmationReceived(res) {\r\n\r\n\r\n\r\n            this.setState({\r\n                \"show\": true,\r\n                \"acceptCallback\":res.accept,\r\n                \"rejectCallback\":res.reject,\r\n                \"message\": res.message\r\n            });\r\n\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    reset() {\r\n\r\n        this.setState({\r\n            \"show\": false,\r\n            \"acceptCallback\":null,\r\n            \"rejectCallback\":null,\r\n            \"message\": ''\r\n        });\r\n    }\r\n\r\n\r\n    handleCancel() {\r\n      //  const {show, acceptCallback, message, rejectCallback} = this.state\r\n\r\n        //\r\n        // if(rejectCallback)\r\n        //     rejectCallback()\r\n\r\n\r\n        this.reset();\r\n    }\r\n\r\n    handleSuccess() {\r\n        const { acceptCallback} = this.state\r\n\r\n\r\n        if(acceptCallback)\r\n            acceptCallback()\r\n\r\n\r\n        this.reset();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {show, acceptCallback, message, rejectCallback} = this.state\r\n\r\n        return <Fragment>\r\n\r\n            {show == true && <div className=\"confirm-message-container \">\r\n\r\n                <div className=\"confirm-message-inner-container\">\r\n                    <div>\r\n                      <Dialog\r\n                          id=\"dlgconfirm\"\r\n                          className=\"confirm-dialog-box\"\r\n                            open={show}\r\n                            onClose={() => {\r\n                                    this.handleCancel()\r\n                                }}\r\n                            PaperComponent={PaperComponent}\r\n                            aria-labelledby=\"draggable-dialog-title\"\r\n                        >\r\n                            <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                                Confirm\r\n                            </DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    {message}\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button id=\"btnCancel\" autoFocus onClick={() => {\r\n                                    this.handleCancel()\r\n                                }} color=\"secondary\">\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button id=\"btnConfirm\" onClick={() => {\r\n                                    this.handleSuccess()\r\n                                }} color=\"primary\">\r\n                                    Ok\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>}\r\n        </Fragment>\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ConfirmMessageComponent;\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\component\\index.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\GuardedRoute.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\auth\\authDispatcher.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\auth\\Register.js",["503","504","505","506","507","508","509","510"],"import {\n    Button,\n    Checkbox,\n    Container,\n    FormControl,\n    FormControlLabel,\n    FormLabel,\n    Grid,\n    Link,\n    makeStyles,\n    MuiAlert,\n    Radio,\n    RadioGroup,\n    React,\n    Snackbar,\n    TextField,\n    Typography,\n    useHistory,\n    useState\n} from \"../component\"\nimport {appNotification} from \"../shared/notification/app-notification\";\nimport {doRegisterDoctor, doRegisterTester, doRegisterUser} from \"./authDispatcher\";\nimport {LOGIN} from \"./authStore\";\nimport {useDispatch} from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport {getAsFormatted} from \"../shared/date-helpers\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nfunction Register() {\n\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch()\n    const [open, setOpen] = React.useState(false);\n    const [error_message, set_error_message] = React.useState(false);\n\n\n    const [userName, setUserName] = useState('user');\n    const [firstName, setFirstName] = useState('user');\n    const [lastName, setLastName] = useState('uslast');\n    const [email, setEmail] = useState('user@upgrad.com');\n    const [dateOfBirth, setDateOfBirth] = useState('1981-11-21');\n    const [password, setPassword] = useState('password');\n    const [confirmPassword, setConfirmPassword] = useState('password');\n    const [address, setAddress] = useState('some address ,some day');\n\n    const [pinCode, setPinCode] = useState('45787878');\n    const [role, setRole] = useState(\"USER\");\n    const [phoneNumber,setPhoneNumber] = useState(\"45454545\");\n    const [gender, setGender] = useState(\"MALE\");\n    const [isAgreed, setIsAgreed] = useState(false);\n\n    //\n    // const [userName, setUserName] = useState('');\n    // const [firstName, setFirstName] = useState('');\n    //const [confirmPassword, setConfirmPassword] = useState('');\n    // const [lastName, setLastName] = useState('');\n    // const [email, setEmail] = useState('');\n    // const [password, setPassword] = useState('');\n    // const [address, setAddress] = useState('');\n    //\n    // const [pinCode, setPinCode] = useState('');\n    // const [userRole, setRole] = useState(\"\");\n    // const [phoneNumber,setPhoneNumber] = useState(\"\");\n    // const [gender, setGender] = useState(\"MALE\");\n\n\n\n    function getRoles (input){\n\n        const isUser = (input === \"USER\")\n        const isDoctor = (input === \"DOCTOR\")\n        const isTester = (input === \"TESTER\")\n\n\n        return {isUser,isDoctor,isTester}\n    }\n\n    function callObservable(subscriberMethod,callback) {\n\n        subscriberMethod\n            .subscribe((response) => {\n\n                callback(response)\n\n            }, (error => {\n\n\n                appNotification.showError(error)\n            }))\n\n    }\n    function registerUser(payload) {\n\n\n        callObservable(doRegisterUser(payload),(response)=>{\n\n            const currentUser = response.user\n            const token = response.token\n\n            appNotification.showSuccess(\"Succesfully Registered\")\n            dispatch({type: LOGIN, \"payload\": response});\n            history.push(\"/profile\")\n\n        })\n\n    }\n    function registerDoctor(payload) {\n\n        callObservable(doRegisterDoctor(payload),(response)=>{\n            appNotification.showSuccess(\"Succesfully Registered,Please upload Document to continue\")\n\n            history.push(\"/upload-document/\" + role +\"/\" + response.id)\n\n        })\n\n\n\n    }\n    function registerTester(payload) {\n\n        callObservable(doRegisterTester(payload),(response)=>{\n\n\n\n            appNotification.showSuccess(\"Succesfully Registered,Please upload Document to continue\")\n\n            history.push(\"/upload-document/\" + role +\"/\" + response.id)\n\n        })\n\n    }\n\n    function onUserTypeChanged(evt,role){\n        if(evt.target.checked)\n            setRole(role)\n\n    }\n    function handleSubmit(event) {\n        event.preventDefault();\n\n\n\n\n\n        const payload = {\n            firstName,\n            lastName,\n            email,\n            password,\n            confirmPassword,\n            dateOfBirth:getAsFormatted(new Date(dateOfBirth)),\n            address,\n            pinCode,\n            userName,\n            phoneNumber,\n            gender\n        }\n\n\n\n        if(!isAgreed ){\n\n            appNotification.showError(\"Please agree the terms and conditions\")\n            return;\n        }\n        if(confirmPassword !== password){\n\n            appNotification.showError(\"Passwords Mismatch\")\n            return;\n        }\n        let  {isUser,isDoctor,isTester} = getRoles(role)\n\n\n        if(isUser)\n            registerUser(payload);\n        else if(isDoctor)\n            registerDoctor(payload);\n        else if(isTester)\n            registerTester(payload);\n\n\n    }\n\n    return (\n        <React.Fragment>\n            <Container component=\"main\" maxWidth=\"xs\">\n\n                <div className={classes.paper}>\n\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Register to take Laboratory Tests.\n                        <hr />\n                    </Typography>\n\n\n                    <form className={classes.form} onSubmit={handleSubmit} noValidate>\n\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={12}>\n                                <FormControl component=\"fieldset\">\n                                    <FormLabel component=\"legend\">Select Role to Register</FormLabel>\n                                    <RadioGroup\n                                        row\n                                        aria-label=\"userRole\"\n                                        name=\"userRole\"\n                                        id=\"userroleDetail\"\n                                        value={role}\n                                        >\n\n\n                                        <FormControlLabel value=\"USER\" control={<Radio  onChange={e => onUserTypeChanged(e,\"USER\")}  />} label=\"Patient\" />\n                                        <FormControlLabel value=\"TESTER\" control={<Radio onChange={e => onUserTypeChanged(e,\"TESTER\")} />} label=\"Tester\" />\n                                        <FormControlLabel value=\"DOCTOR\" control={<Radio onChange={e => onUserTypeChanged(e,\"DOCTOR\")} />} label=\"Doctor\" />\n                                    </RadioGroup>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                                <TextField\n                                    name=\"firstName\"\n                                    value={firstName}\n                                    onInput={e => setFirstName(e.target.value)}\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={lastName}\n                                    onInput={e => setLastName(e.target.value)}\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    autoComplete=\"lname\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12} sm={4}>\n\n\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\n                                    <InputLabel htmlFor=\"outlined-gender-native-simple\">Gender</InputLabel>\n                                    <Select\n                                        native\n                                        value={gender}\n                                        onChange={e => {\n\n                                            setGender(e.target.value)\n                                        }}\n                                        label=\"Gender\"\n                                        inputProps={{\n                                            name: 'gender',\n                                            id: 'outlined-gender-native-simple',\n                                        }}\n                                    >\n                                        <option value=\"FEMALE\">Female</option>\n                                        <option value=\"MALE\">Male</option>\n                                        <option value=\"OTHER\">Other</option>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n\n\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={dateOfBirth}\n                                    onInput={e => setDateOfBirth(e.target.value)}\n                                    required\n                                    fullWidth\n                                    id=\"dateOfBirth\"\n                                    label=\"Date of Birth\"\n                                    name=\"dateOfBirth\"\n                                    type=\"date\"\n                                    autoComplete=\"dateOfBirth\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={userName}\n                                    onInput={e => setUserName(e.target.value)}\n                                    required\n                                    fullWidth\n                                    id=\"userName\"\n                                    label=\"User Name\"\n                                    name=\"userName\"\n                                    autoComplete=\"userName\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={password}\n                                    onInput={e => setPassword(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={confirmPassword}\n                                    onInput={e => setConfirmPassword(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"confirmPassword\"\n                                    label=\"Confirm Password\"\n                                    type=\"password\"\n                                    id=\"confirmPassword\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={email}\n                                    onInput={e => setEmail(e.target.value)}\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={phoneNumber}\n                                    onInput={e => setPhoneNumber(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"mobile\"\n                                    label=\"Mobile No.\"\n                                    type=\"number\"\n                                    id=\"mobile\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={address}\n                                    onInput={e => setAddress(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"address\"\n                                    label=\"Address\"\n                                    type=\"text\"\n                                    id=\"address\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={pinCode}\n                                    onInput={e => setPinCode(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"pinCode\"\n                                    label=\"Pincode\"\n                                    type=\"text\"\n                                    id=\"pinCode\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    id=\"agreecondition\"\n                                    control={<Checkbox checked={isAgreed} onChange={e => {\n                                        setIsAgreed(e.target.checked)\n                                    }} value=\"allowExtraEmails\" color=\"primary\" />}\n                                    label=\"I agree to abide by all government regulation.\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Register\n          </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link to=\"/login\" variant=\"body2\">\n                                    Already have an account? Sign in\n              </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n\n            </Container>\n        </React.Fragment>\n\n    )\n}\n\nexport default Register\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\auth\\Login.js",["511","512","513","514","515","516"],"import {\n    Button,\n    Checkbox,\n    Container,\n    CssBaseline,\n    FormControlLabel,\n    Grid,\n    Link,\n    makeStyles,\n    TextField,\n    Typography\n} from \"../component\"\nimport {useHistory} from \"react-router-dom\";\n\nimport React, {useState} from 'react';\nimport {useDispatch} from 'react-redux';\n\n\nimport {environment} from \"../environment\";\nimport {clearAuthToken, doLogin} from \"./authDispatcher\";\nimport {LOGIN} from \"./authStore\";\nimport {appNotification} from \"../shared/notification/app-notification\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction Login(props) {\n\n    const classes = useStyles();\n    const history = useHistory();\n\n    const dispatch = useDispatch()\n\n\n    const [userName, set_userName] = useState(\"\")\n    const [password, set_password] = useState(\"\")\n\n\n\n\n\n\n\n    async function login(event) {\n        event.preventDefault();\n        console.log(\"userName\",userName)\n        const payload = {\n            userName,\n            password\n        }\n\n\n        const loginUrl = environment.baseUrl +\"/auth/login\"\n\n\n        doLogin( payload)\n            .subscribe( (response) =>{\n\n                const currentUser = response.user\n                const token = response.token\n\n\n                dispatch({type: LOGIN,\"payload\":response});\n\n\n\n                    history.push(\"/profile\")\n\n\n            },(error => {\n                appNotification.showError(error )\n\n\n            }))\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Login in\n          </Typography>\n                <form className={classes.form} onSubmit={login} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"userName\"\n                        label=\"User Name\"\n                        name=\"userName\"\n                        autoComplete=\"userName\"\n                        autoFocus\n                        value={userName}\n                        onInput={e => {\n                            set_userName(e.target.value)\n                        }}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onInput={e => set_password(e.target.value)}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n            </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            {/* <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                                /upload-document/210\n                </Link> */}\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" to=\"/register\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n\n        </Container>\n\n    )\n}\n\n\nexport default Login\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\lab\\PendingLabTests.js",["517","518"],"import {Container, Grid, makeStyles, React, useEffect, useHistory, useState,} from \"../component\"\nimport MUIDataTable from \"mui-datatables\";\nimport {appNotification} from \"../shared/notification/app-notification\";\nimport {doAssignLabResult, doGetPendingTestRequests} from \"./labDispatcher\";\nimport {confirmMessageService} from \"../shared/confirm/confirm-message-service\";\nimport Button from '@material-ui/core/Button';\n\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport {useDispatch} from \"react-redux\";\nimport {useGlobalStyles} from \"../styles/GlobalStyles\";\nimport {errorHandler} from \"../shared/common-helpers\";\n\n\n\n\nfunction PendingLabTests() {\n\n    const classes = useGlobalStyles();\n    const history = useHistory();\n    const dispatch = useDispatch()\n    const [data, setData] = useState([]);\n\n    const [requests, setRequests] = useState([]);\n    const columns = [\n\n        {\n            name: \"Request ID\",\n            options: {\n                filter: true,\n            }\n        },\n        {\n            name: \"Name\",\n            options: {\n                filter: true,\n            }\n        },\n        {\n\n            name: \"Age\",\n            options: {\n                filter: true,\n            }\n        },\n        {\n\n            name: \"Status\",\n            options: {\n                filter: true,\n            }\n        },\n        {\n            name: 'Actions',\n            options: {\n                filter: false,\n                sort: false,\n                empty: true,\n                customBodyRenderLite: (dataIndex) => {\n\n                    return    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}\n                        startIcon={<AssignmentIndIcon />}\n                        onClick={() => {\n                            onAssignToMeClicked(dataIndex)\n                        }}\n                    >\n                        Assign to Me\n                    </Button>\n\n                },\n            }\n        }\n\n    ];\n\n\n\n\n    const options = {\n        filter: true,\n        filterType: 'dropdown',\n        responsive: 'standard',\n        selectableRows:'none',\n\n    };\n\n\n    async function onAssignToMeClicked(index){\n        const pendingRequest = requests[index]\n\n\n            await confirmMessageService.show(\"Do you want to Assign yourself for testing \" + pendingRequest.name + \"?\")\n\n            doAssignLabResult(pendingRequest.requestId).subscribe((res)=>{\n                appNotification.showSuccess(\"Request Assigned to you, Please Goto \"+ pendingRequest.address+\" and  update the details.\")\n\n                history.push(\"/update-lab-report/\" + pendingRequest.requestId)\n\n            }, errorHandler);\n\n\n\n\n    }\n\n\n\n    function reloadTests() {\n\n        doGetPendingTestRequests()\n            .subscribe((pendingTests) => {\n                console.log(\"pendingTests\",pendingTests)\n\n                setRequests(pendingTests)\n                const buffer = pendingTests.map(item=>{\n\n                    return [item.requestId,item.name,item.age,item.status]\n                })\n\n                const results = []\n                results.push(buffer)\n                setData(buffer)\n\n            }, errorHandler)\n    }\n\n\n    useEffect(() => {\n\n\n        reloadTests();\n\n\n\n\n\n    }, [])\n\n\n\n    return (\n        <React.Fragment>\n            <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n                <h1>\n                   Pending Tests\n                </h1>\n                <hr />\n            </Container>\n            <Container component=\"main\" maxWidth=\"md\">\n                <Grid container>\n                    <Grid item md={12}>\n\n                        <MUIDataTable title={\"Pending Tests\"} data={data} columns={columns} options={options} />\n\n                    </Grid>\n                </Grid>\n            </Container>\n        </React.Fragment>\n\n    )\n}\n\nexport default PendingLabTests\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\consultation\\PendingConsultations.js",["519","520"],"import {Container, Grid, makeStyles, React, useEffect, useHistory, useState,} from \"../component\"\nimport MUIDataTable from \"mui-datatables\";\nimport {appNotification} from \"../shared/notification/app-notification\";\nimport {doAssignConsultation, doGetPendingConsultations} from \"./consultationDispatcher\";\nimport {confirmMessageService} from \"../shared/confirm/confirm-message-service\";\nimport Button from '@material-ui/core/Button';\n\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport {useDispatch} from \"react-redux\";\nimport {errorHandler} from \"../shared/common-helpers\";\nimport {useGlobalStyles} from \"../styles/GlobalStyles\";\n\n\n\nfunction PendingConsultations() {\n\n    const classes = useGlobalStyles();\n    const history = useHistory();\n\n    const [data, setData] = useState([]);\n\n    const [requests, setRequests] = useState([]);\n    const columns = [\n\n        {\n            name: \"Request ID\",\n            options: {\n                filter: true,\n            }\n        },\n        {\n            name: \"Name\",\n            options: {\n                filter: true,\n            }\n        },\n        {\n\n            name: \"Age\",\n            options: {\n                filter: true,\n            }\n        },\n        {\n\n            name: \"Status\",\n            options: {\n                filter: true,\n            }\n        },\n        {\n            name: 'Actions',\n            options: {\n                filter: false,\n                sort: false,\n                empty: true,\n                customBodyRenderLite: (dataIndex) => {\n\n                    return <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}\n                        startIcon={<AssignmentIndIcon/>}\n                        onClick={() => {\n                            onAssignToMeClicked(dataIndex)\n                        }}\n                    >\n                        Assign to Me\n                    </Button>\n\n                },\n            }\n        }\n\n    ];\n\n\n    const options = {\n        filter: true,\n        filterType: 'dropdown',\n        responsive: 'standard',\n        selectableRows: 'none',\n\n    };\n\n\n    async function onAssignToMeClicked(index) {\n        const pendingRequest = requests[index]\n\n\n            await confirmMessageService.show(\"Do you want to Assign yourself for Consultaion \" + pendingRequest.name + \"?\")\n\n            doAssignConsultation(pendingRequest.requestId).subscribe((res) => {\n                appNotification.showSuccess(\"Request Assigned to you, Please update your diagnosis details.\")\n\n                history.push(\"/update-consultation/\" + pendingRequest.requestId)\n\n            }, errorHandler);\n\n\n\n\n    }\n\n\n\n    function reloadPendingConsultations() {\n\n        doGetPendingConsultations()\n            .subscribe((pendingConsultations) => {\n\n\n                setRequests(pendingConsultations)\n                const buffer = pendingConsultations.map(item => {\n\n                    const {result} = item.labResult\n                    return [item.requestId, item.name, item.age, result]\n                })\n\n                const results = []\n                results.push(buffer)\n                setData(buffer)\n\n            }, errorHandler)\n    }\n\n\n    useEffect(() => {\n\n\n        reloadPendingConsultations();\n\n\n    }, [])\n\n\n    return (\n        <React.Fragment>\n            <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n                <h1>\n                    Pending Consultations\n                </h1>\n                <hr/>\n            </Container>\n            <Container component=\"main\" maxWidth=\"md\">\n                <Grid container>\n                    <Grid item md={12}>\n\n                        <MUIDataTable title={\"Pending Consultations\"} data={data} columns={columns} options={options}/>\n\n                    </Grid>\n                </Grid>\n            </Container>\n        </React.Fragment>\n\n    )\n}\n\nexport default PendingConsultations\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\consultation\\ConsultationHistory.js",["521"],"import {Button, React, useHistory, useState,} from \"../component\"\nimport {doGetMyConsultationHistory} from \"./consultationDispatcher\";\nimport RequestHistory from \"../testrequests/RequestHistory\";\nimport {Fragment} from \"react\";\nimport {useGlobalStyles} from \"../styles/GlobalStyles\";\n\n\nfunction ConsultationHistory() {\n//Based on the logged in user ,display his tests\n    const classes = useGlobalStyles();\n    const history = useHistory();\n\n    const [requests, setRequests] = useState([]);\n\n    async function onUpdateConsultationHistory(index){\n        const currentRequest = requests[index]\n        history.push(\"/update-consultation/\" + currentRequest.requestId)\n\n\n    }\n\n\n    const actionColumns =[{\n        name: 'Actions',\n        options: {\n            filter: false,\n            sort: false,\n            empty: true,\n            customBodyRenderLite: (dataIndex) => {\n\n                const currentRequest = requests[dataIndex]\n                if(currentRequest && currentRequest.status && currentRequest.status == \"DIAGNOSIS_IN_PROCESS\"){\n                    return   <div>\n\n                        <Button  onClick={() => {\n                            onUpdateConsultationHistory(dataIndex)\n                        }} color=\"secondary\" variant=\"outlined\" className={classes.link}>\n                            Update\n                        </Button>\n\n\n\n                    </div>\n                }else{\n                    return <Fragment></Fragment>\n                }\n\n\n\n            },\n        }\n    },]\n\n\n    return (\n        <RequestHistory actionColumns={actionColumns} getMyHistory={doGetMyConsultationHistory} onDataLoaded ={(results) => {\n            setRequests(results)\n        }}></RequestHistory>\n\n    )\n}\n\nexport default ConsultationHistory\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\consultation\\UpdateConsultation.js",["522","523","524","525"],"\nimport {\n    Button,\n    Container,\n    FormControl,\n    Grid,\n    makeStyles,\n    React,\n    TextField,\n    Typography,\n    useEffect,\n    useHistory,\n    useState\n} from \"../component\"\nimport {doCompleteConsultation} from \"./consultationDispatcher\";\nimport {appNotification} from \"../shared/notification/app-notification\";\nimport {useLocation, useRouteMatch} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {doGetTestRequestByID} from \"../testrequests/testRequestDispatcher\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport TestRequestDetail from \"../testrequests/TestRequestDetail\";\nimport LabResultDetail from \"../testrequests/LabResultDetail\";\nimport {errorHandler} from \"../shared/common-helpers\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    paperWhite: {\n        margin: \"0 auto\",\n        padding: \"20px 20px 20px 20px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor:'white',\n    },\n    mt40:{\n        marginTop:40,\n    },\n    w100:{\n        width: '100%',\n    },\n    select100Form:{\n        width: '100%',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n\n    formContainer:{\n        padding:\"50 50 50 50\"\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction UpdateConsultation() {\n\n    const classes = useStyles();\n\n    const history = useHistory();\n\n    let {params} = useRouteMatch(\"/update-consultation/:id\");\n\n    const {id} =params\n\n    const [testRequest, setTestRequest] = useState(null);\n    const [labResult, setLabResult] = useState(null);\n    const [  suggestion , setSuggestion] = useState('NO_ISSUES');\n    const [comments, setComments] = useState('');\n\n\n\n\n\n\n\n    function handleSubmit(event) {\n\n\n\n\n        event.preventDefault();\n        const payload = {\n            suggestion,\n            comments,\n\n        }\n\n        console.log(\"payload\",payload)\n        doCompleteConsultation(id,payload)\n            .subscribe((response) => {\n                appNotification.showSuccess(\"Succesfully Updated Consultation\")\n               history.push(\"/consultation-history\")\n\n            }, errorHandler)\n\n    }\n\n\n\n    useEffect(() => {\n\n\n        doGetTestRequestByID(id)\n            .subscribe((result) => {\n                setTestRequest(result)\n                setLabResult(result.labResult)\n\n\n            },errorHandler)\n\n\n\n\n\n    }, [])\n\n\n\n\n\n\n    return (\n        <React.Fragment>\n            <Container component=\"main\" className={classes.mt40}>\n\n\n                <Grid container spacing={2}  className={classes.paperWhite} >\n\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Provide Prescription\n                        <hr />\n                    </Typography>\n                    <Grid container spacing={2}  className={classes.formContainer} >\n\n                        <Grid item xs={6} >\n                            <TestRequestDetail testRequest={testRequest}></TestRequestDetail>\n\n                            <br/>\n                            <LabResultDetail labResult={labResult}></LabResultDetail>\n\n                        </Grid>\n                        <Grid item xs={6} >\n                            <form className={classes.form} onSubmit={handleSubmit} noValidate>\n\n                                <Grid container spacing={2}>\n\n\n\n                                    <Grid item xs={12} >\n\n\n                                        <FormControl variant=\"outlined\" className={classes.select100Form}>\n                                            <InputLabel htmlFor=\"outlined-result-native-simple\">Suggestion</InputLabel>\n                                            <Select\n                                                native\n                                                value={suggestion}\n                                                onChange={e => setSuggestion(e.target.value)}\n                                                label=\"Suggestion\"\n                                                className={classes.select100}\n                                                inputProps={{\n                                                    name: 'suggestion',\n                                                    id: 'suggestionSelect',\n                                                }}\n                                            >\n                                                <option value=\"NO_ISSUES\">No Issues</option>\n                                                <option value=\"HOME_QUARANTINE\">Quarantine in Home</option>\n                                                <option value=\"ADMIT\">Admit in hospital</option>\n                                            </Select>\n                                        </FormControl>\n\n\n\n\n                                    </Grid>\n\n\n\n                                    <Grid item xs={12}>\n\n                                        <TextareaAutosize\n                                            className={classes.w100}\n                                            aria-label=\"comments\"\n                                            rowsMin={3}\n                                            value={comments}\n                                            name=\"comments\"\n                                            label=\"comments\"\n\n                                            id=\"comments\"\n                                            onInput={e => setComments(e.target.value)}\n                                            placeholder=\"Comments\" />\n\n                                    </Grid>\n\n\n\n                                </Grid>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                >\n                                    Update Consultation\n                                </Button>\n\n                            </form>\n\n                        </Grid>\n                    </Grid>\n\n\n                </Grid>\n\n            </Container>\n        </React.Fragment>\n\n    )\n}\n\nexport default UpdateConsultation\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\lab\\LabHistory.js",["526"],"import {Button, React, useHistory, useState,} from \"../component\"\nimport {doGetMyLabHistory} from \"./labDispatcher\";\nimport RequestHistory from \"../testrequests/RequestHistory\";\nimport {Fragment} from \"react\";\nimport {useGlobalStyles} from \"../styles/GlobalStyles\";\n\n\nfunction LabHistory() {\n\n    const classes = useGlobalStyles();\n    const history = useHistory();\n\n    const [requests, setRequests] = useState([]);\n\n    async function onUpdateLabHistory(index){\n        const currentRequest = requests[index]\n        console.log(currentRequest)\n        history.push(\"/update-lab-report/\" + currentRequest.requestId)\n\n\n    }\n\n\n    const actionColumns =[{\n        name: 'Actions',\n        options: {\n            filter: false,\n            sort: false,\n            empty: true,\n            customBodyRenderLite: (dataIndex) => {\n\n                const currentRequest = requests[dataIndex]\n                if(currentRequest && currentRequest.status && currentRequest.status == \"LAB_TEST_IN_PROGRESS\"){\n                    return   <div>\n\n                        <Button onClick={() => {\n                            onUpdateLabHistory(dataIndex)\n                        }} color=\"secondary\" variant=\"outlined\" className={classes.link}>\n                            Update\n                        </Button>\n\n\n\n                    </div>\n                }else{\n                    return <Fragment></Fragment>\n                }\n\n\n\n            },\n        }\n    }]\n\n    return (\n      <RequestHistory actionColumns={actionColumns} getMyHistory={doGetMyLabHistory} onDataLoaded ={(results) => {\n          setRequests(results)\n      }}></RequestHistory>\n\n    )\n}\n\nexport default LabHistory\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\lab\\UpdateLabResult.js",["527","528","529"],"import {\n    Button,\n    Container,\n    FormControl,\n    Grid,\n    makeStyles,\n    React,\n    TextField,\n    Typography,\n    useEffect,\n    useHistory,\n    useState\n} from \"../component\"\nimport {doUpdateLabResult} from \"./labDispatcher\";\nimport {appNotification} from \"../shared/notification/app-notification\";\nimport {useLocation, useRouteMatch} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {doGetTestRequestByID} from \"../testrequests/testRequestDispatcher\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport TestRequestDetail from \"../testrequests/TestRequestDetail\";\nimport {errorHandler} from \"../shared/common-helpers\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    paperWhite: {\n        margin: \"0 auto\",\n        padding: \"20px 20px 20px 20px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor:'white',\n    },\n    mt40:{\n        marginTop:40,\n    },\n    w100:{\n        width: '100%',\n    },\n    select100Form:{\n        width: '100%',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n\n    formContainer:{\n      padding:\"50 50 50 50\"\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction UpdateLabResult() {\n\n    const classes = useStyles();\n\n    const history = useHistory();\n    let location = useLocation();\n    let {params} = useRouteMatch(\"/update-lab-report/:id\");\n    const dispatch = useDispatch()\n    const {id} =params\n    const [testRequest, setTestRequest] = useState(null);\n\n    const [bloodPressure, setBloodPressure] = useState('102');\n    const [comments, setComments] = useState('Should be left');\n    const [heartBeat, setHeartBeat] = useState('97');\n    const [oxygenLevel, setOxygenLevel] = useState('95');\n    const [temperature, setTemperature] = useState('98');\n    const [result, setResult] = useState('NEGATIVE');\n   // const [bloodPressure, setBloodPressure] = useState('');\n   //  const [comments, setComments] = useState('');\n   //  const [heartBeat, setHeartBeat] = useState('');\n   //  const [oxygenLevel, setOxygenLevel] = useState('');\n   //  const [temperature, setTemperature] = useState('');\n   //  const [result, setResult] = useState('');\n\n\n\n\n\n\n    function handleSubmit(event) {\n\n\n\n\n        event.preventDefault();\n        const payload = {\n            bloodPressure,\n            comments,\n            heartBeat,\n            oxygenLevel,\n            result,\n            temperature\n        }\n        doUpdateLabResult(id,payload)\n            .subscribe((response) => {\n                appNotification.showSuccess(\"Succesfully Updated Lab Result\")\n                history.push(\"/lab-history\")\n\n            }, errorHandler)\n\n    }\n\n\n\n\n    useEffect(() => {\n\n\n        doGetTestRequestByID(id)\n            .subscribe((result) => {\n                setTestRequest(result)\n                console.log(result)\n\n            }, errorHandler)\n\n\n\n\n\n    }, [])\n\n\n\n\n    return (\n        <React.Fragment>\n            <Container component=\"main\" className={classes.mt40}>\n\n\n                 <Grid container spacing={2}  className={classes.paperWhite} >\n\n                    <Typography component=\"h1\" variant=\"h5\">\n                       Update Lab Result\n                        <hr />\n                    </Typography>\n                    <Grid container spacing={2}  className={classes.formContainer} >\n\n                        <Grid item xs={6} >\n                            <TestRequestDetail testRequest={testRequest}></TestRequestDetail>\n\n                        </Grid>\n                        <Grid item xs={6} >\n                            <form className={classes.form} onSubmit={handleSubmit} noValidate>\n\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} >\n\n\n\n\n                                        <TextField\n                                            variant=\"outlined\"\n                                            value={bloodPressure}\n                                            onInput={e => setBloodPressure(e.target.value)}\n                                            required\n                                            className={classes.w100}\n                                            fullWidth\n                                            id=\"bloodPressure\"\n                                            label=\"Blood Pressure\"\n                                            name=\"bloodPressure\"\n                                            autoComplete=\"bloodPressure\"\n                                        />\n\n\n\n                                    </Grid>\n\n\n                                    <Grid item xs={12} >\n                                        <TextField\n                                            variant=\"outlined\"\n                                            value={heartBeat}\n                                            onInput={e => setHeartBeat(e.target.value)}\n                                            required\n                                            fullWidth\n                                            id=\"heartBeat\"\n                                            label=\"Heart Beat\"\n                                            name=\"heartBeat\"\n                                            autoComplete=\"heartBeat\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} >\n                                        <TextField\n                                            variant=\"outlined\"\n                                            value={oxygenLevel}\n                                            onInput={e => setOxygenLevel(e.target.value)}\n                                            required\n                                            fullWidth\n                                            id=\"oxygenLevel\"\n                                            label=\"Oxygen Level\"\n                                            name=\"oxygenLevel\"\n                                            autoComplete=\"oxygenLevel\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} >\n                                        <TextField\n                                            variant=\"outlined\"\n                                            value={temperature}\n                                            onInput={e => setTemperature(e.target.value)}\n                                            required\n                                            fullWidth\n                                            id=\"temperature\"\n                                            label=\"Body Temperature\"\n                                            name=\"temperature\"\n                                            autoComplete=\"temperature\"\n                                        />\n                                    </Grid>\n\n\n\n                                    <Grid item xs={12} >\n\n\n                                        <FormControl variant=\"outlined\" className={classes.select100Form}>\n                                            <InputLabel htmlFor=\"outlined-result-native-simple\">Test Result</InputLabel>\n                                            <Select\n                                                native\n                                                value={result}\n                                                onChange={e => setResult(e.target.value)}\n                                                label=\"Test Result\"\n                                                className={classes.select100}\n                                                inputProps={{\n                                                    name: 'result',\n                                                    id: 'selectLabResult',\n                                                }}\n                                            >\n                                                <option value=\"POSITIVE\">Positive</option>\n                                                <option value=\"NEGATIVE\">Negative</option>\n                                            </Select>\n                                        </FormControl>\n\n\n\n\n                                    </Grid>\n\n\n\n                                    <Grid item xs={12}>\n\n                                        <TextareaAutosize\n                                            className={classes.w100}\n                                            aria-label=\"comments\"\n                                            rowsMin={3}\n                                            value={comments}\n                                            name=\"comments\"\n                                            label=\"comments\"\n\n                                            id=\"comments\"\n                                            onInput={e => setComments(e.target.value)}\n                                            placeholder=\"Comments\" />\n\n                                    </Grid>\n\n\n\n                                </Grid>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                >\n                                    Update Lab Result\n                                </Button>\n\n                            </form>\n\n                        </Grid>\n                    </Grid>\n\n\n                 </Grid>\n\n            </Container>\n        </React.Fragment>\n\n    )\n}\n\nexport default UpdateLabResult\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\PendingApprovals.js",["530","531","532"],"import {Container, Grid, React, useEffect, useSelector, useState,} from \"../component\"\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {useGlobalStyles} from \"../styles/GlobalStyles\";\r\nimport {ViewAttachmentButton} from \"./components/ViewAttachmentButton\";\r\nimport {PendingApprovalActions} from \"./components/PendingApprovalActions\";\r\nimport {reloadPendingApprovals} from \"./shared/pending-user-utils\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nfunction PendingApprovals() {\r\n\r\n    const classes = useGlobalStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const {pendingUsers,pendingUsersLoaded,pendingUserGridData} = useSelector(state => state.authority);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const columns = [\r\n        {\r\n            name: 'S.No',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                empty: true,\r\n                customBodyRenderLite: (dataIndex) => {\r\n\r\n                    return <strong>{dataIndex + 1}</strong>;\r\n\r\n                },\r\n            }\r\n        },\r\n        {\r\n            name: \"Name\",\r\n            options: {\r\n                filter: true,\r\n            }\r\n        },\r\n        {\r\n\r\n            name: \"Email\",\r\n            options: {\r\n                filter: true,\r\n            }\r\n        },\r\n        {\r\n            name: 'Role',\r\n            options: {\r\n                filter: true,\r\n                filterType: 'multiselect',\r\n                customBodyRenderLite: (dataIndex) => {\r\n                    let value = data[dataIndex][2];\r\n                    return <Chip label={value} key={value}/>;\r\n\r\n                },\r\n            }\r\n        },\r\n        {\r\n            name: 'View Document',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                empty: true,\r\n                customBodyRenderLite: (dataIndex) => {\r\n\r\n                    return <ViewAttachmentButton dataIndex={dataIndex} />\r\n                },\r\n            }\r\n        },\r\n        {\r\n            name: 'Actions',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                empty: true,\r\n                customBodyRenderLite: (dataIndex) => {\r\n                    return <PendingApprovalActions dataIndex={dataIndex} />\r\n                },\r\n            }\r\n        },\r\n    ];\r\n\r\n    const options = {\r\n        filter: true,\r\n        filterType: 'dropdown',\r\n        responsive: 'standard',\r\n        selectableRows: 'none'\r\n    };\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n\r\n    if(pendingUsersLoaded== false)\r\n        reloadPendingApprovals(dispatch);\r\n    else{\r\n        setData(pendingUserGridData)\r\n    }\r\n\r\n\r\n},[pendingUserGridData])\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\r\n                <h1>\r\n                    Pending Approvals\r\n                </h1>\r\n                <hr/>\r\n            </Container>\r\n            <Container component=\"main\" maxWidth=\"md\">\r\n                <Grid container>\r\n                    <Grid item md={12}>\r\n\r\n                        <MUIDataTable title={\"List of Users\"} data={data} columns={columns} options={options}/>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default PendingApprovals\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\ViewAllRequests.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\AuthorityDashboard.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\UpdateThreshold.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\UserHistory.js",["533","534","535"],"import {Button, makeStyles, React, useState,} from \"../component\"\nimport {doGetMyTestRequests} from \"./testRequestDispatcher\";\nimport RequestHistory from \"./RequestHistory\";\nimport {Fragment} from \"react\";\n\n\nfunction UserHistory() {\n\n\n    const [requests, setRequests] = useState([]);\n\n    function getResult(dataIndex){\n        const currentRequest = requests[dataIndex]\n        if(currentRequest && currentRequest.labResult && currentRequest.labResult.result){\n            return currentRequest.labResult.result\n\n        }else {\n            return \"\"\n        }\n\n\n    }\n    function getSuggestion(dataIndex){\n        const currentRequest = requests[dataIndex]\n        if(currentRequest && currentRequest.consultation && currentRequest.consultation.suggestion){\n            return currentRequest.consultation.suggestion\n\n        }else {\n            return \"\"\n        }\n\n\n    }\n\n\n\n    const actionColumns =[{\n        name: 'Result',\n        options: {\n            filter: false,\n            sort: false,\n            empty: true,\n            customBodyRenderLite: (dataIndex) => {\n\n\n                const result = getResult(dataIndex)\n                    return <div className={result}>\n                        {result}\n                        </div>\n\n\n\n\n\n            },\n        }\n    },{\n        name: 'Doctor Suggestion',\n        options: {\n            filter: false,\n            sort: false,\n            empty: true,\n            customBodyRenderLite: (dataIndex) => {\n\n\n                const result = getSuggestion(dataIndex)\n                return <div className={result}>\n                    {result}\n                </div>\n\n\n\n            },\n        }\n    },]\n\n\n    return (\n        <RequestHistory onDataLoaded ={(results) => {\n            setRequests(results)\n        }} actionColumns={actionColumns} getMyHistory={doGetMyTestRequests} ></RequestHistory>\n\n    )\n\n\n}\n\nexport default UserHistory\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\notification\\app-notification-component.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\documents\\UploadDocument.js",["536","537","538","539","540"],"import {\r\n    Button,\r\n    Checkbox,\r\n    Container,\r\n    CssBaseline,\r\n    FormControlLabel,\r\n    Grid,\r\n    makeStyles,\r\n    Typography,\r\n    useHistory\r\n} from \"../component\"\r\n\r\nimport React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {appNotification} from \"../shared/notification/app-notification\";\r\nimport {doUploadDocument} from \"../auth/authDispatcher\";\r\nimport {useLocation, useRouteMatch} from 'react-router-dom';\r\nimport {useGlobalStyles} from \"../styles/GlobalStyles\";\r\n\r\n\r\n\r\nexport function UploadDocument(props) {\r\n\r\n    const classes = useGlobalStyles();\r\n    const history = useHistory();\r\n\r\n    let {params} = useRouteMatch(\"/upload-document/:role/:id\");\r\n\r\n    const {role,id} =params\r\n    const [selectedFiles, setSelectedFiles] = useState(null)\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [isAgreed, setIsAgreed] = useState(false);\r\n\r\n\r\n\r\n\r\n       const isDoctor = (role === \"DOCTOR\")\r\n        const isTester = (role === \"TESTER\")\r\n\r\n    let text=\"Please upload the ID card to continue\"\r\n\r\n    if(isTester)\r\n     text=\"Please upload the Lab Tester ID card for account verification\"\r\n    else if(isDoctor)\r\n        text=\"Please upload the Doctor ID card for account verification\"\r\n\r\n\r\n    async function uploadFile(event) {\r\n        event.preventDefault();\r\n\r\n\r\n        if(!isAgreed ){\r\n            appNotification.showError(\"Please agree to the terms and conditions\")\r\n            return;\r\n        }\r\n\r\n    const hasFileData  = (input)=>{\r\n            const files = input || []\r\n            return (files  && files.length >0)\r\n    }\r\n\r\n\r\n        if(hasFileData(selectedFiles) == false){\r\n            appNotification.showError(\"Please Select a Document to upload\")\r\n            return;\r\n        }\r\n       // let file = files[0];\r\n\r\n\r\n        setDisabled(true)\r\n\r\n        doUploadDocument(id,selectedFiles[0])\r\n            .subscribe( (response) =>{\r\n\r\n\r\n                appNotification.showSuccess(\"Succesfully Uploaded Document, You will be notified after its approved\" )\r\n                history.push(\"/\")\r\n\r\n            },(error => {\r\n                console.log(\"server error\")\r\n                appNotification.showError(error )\r\n                setDisabled(false)\r\n            }))\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    {text}\r\n                </Typography>\r\n\r\n\r\n                <form className={classes.formFullWidthOneSpace} onSubmit={uploadFile} noValidate>\r\n\r\n                    <Grid container spacing={2}>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <input type=\"file\"   id=\"fileUpdate\"  onChange={e => setSelectedFiles(e.target.files)}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                id=\"documentAgreeCondition\"\r\n                                control={<Checkbox checked={isAgreed} onChange={e => setIsAgreed(e.target.checked)} value=\"allowExtraEmails\" color=\"primary\" />}\r\n                                label=\"I agree that all the information provided is Genuine.\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submitWithSmallMargin}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </Container>\r\n\r\n    )\r\n}\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\RequestTest.js",["541","542","543"],"import {\n    Button,\n    Container,\n    FormControl,\n    Grid,\n    makeStyles,\n    React,\n    TextField,\n    Typography,\n    useHistory,\n    useSelector,\n    useState\n} from \"../component\"\nimport {appNotification} from \"../shared/notification/app-notification\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport {doCreateTestRequest} from \"./testRequestDispatcher\";\nimport {errorHandler} from \"../shared/common-helpers\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    select100:{\n        width: '100%',\n    },\n    select100Form:{\n        width: '100%',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction RequestTest() {\n\n    const classes = useStyles();\n    const history = useHistory();\n    const [forMe,setForMe] = useState(false);\n\n    const [name, setName] = useState('');\n    const [address, setAddress] = useState('');\n    const [age, setAge] = useState('')\n    const [email, setEmail] = useState('');\n    const [gender, setGender] = useState('');\n    const [shrink, setShrink] = useState(false);\n    const [phoneNumber,setPhoneNumber] = useState(\"\");\n    const [pinCode, setPinCode] = useState('');\n    // const [name, setName] = useState('user');\n    // const [address, setAddress] = useState('some address ,some day');\n    // const [age, setAge] = useState('25')\n    // const [email, setEmail] = useState('user@upgrad.com');\n    // const [gender, setGender] = useState(\"MALE\");\n    // const [phoneNumber,setPhoneNumber] = useState(\"45454545\");\n    // const [pinCode, setPinCode] = useState('45787878');\n    const [isAgreed, setIsAgreed] = useState(false);\n\n    const {user} = useSelector(state => state.auth);\n\n    function toggleTestForMe(){\n        const toggledState = !forMe\n        setForMe(toggledState)\n        if(toggledState){\n\n\n            console.log(user)\n            setName(user.firstName )\n           setAddress(user.address)\n            setAge(user.age)\n            setEmail(user.email)\n            setGender(user.gender)\n\n            setPhoneNumber(user.phoneNumber)\n            setPinCode(user.pinCode)\n            setShrink(true)\n\n        }\n    }\n\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        const payload = {\n\n            name,\n            gender,\n            address,\n            age,\n            email,\n            phoneNumber,\n            pinCode\n\n\n        }\n        console.log(payload)\n\n        doCreateTestRequest(payload)\n            .subscribe((response) => {\n\n                console.log(\"doCreateTestRequest\",response)\n                appNotification.showSuccess(\"Test Request Created\")\n                history.push(\"/user-history\")\n            }, errorHandler)\n\n    }\n\n    return (\n        <React.Fragment>\n            <Container component=\"main\" maxWidth=\"xs\">\n\n                <div className={classes.paper}>\n\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Request For Test\n                        <hr />\n                    </Typography>\n\n\n                    <form className={classes.form} onSubmit={handleSubmit} noValidate>\n\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} >\n\n\n                                <FormControl variant=\"outlined\" className={classes.select100Form}>\n                                    <InputLabel htmlFor=\"outlined-testfor-native-simple\">Test For</InputLabel>\n                                    <Select\n                                        native\n                                        value={forMe}\n                                        onChange={e => toggleTestForMe()}\n                                        label=\"Test For\"\n                                        className={classes.select100}\n                                        inputProps={{\n                                            name: 'testfor',\n                                            id: 'select-test-for-me',\n                                        }}\n                                    >\n                                        <option value=\"true\">Myself</option>\n                                        <option value=\"false\">Other</option>\n                                    </Select>\n                                </FormControl>\n\n\n\n\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={name}\n                                    onInput={e => setName(e.target.value)}\n                                    required\n                                    fullWidth\n                                    id=\"name\"\n                                    label=\"Name\"\n                                    name=\"name\"\n                                    autoComplete=\"name\"\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n\n                                <FormControl variant=\"outlined\" className={classes.select100Form}>\n                                    <InputLabel htmlFor=\"outlined-gender-native-simple\">Gender</InputLabel>\n                                    <Select\n                                        className={classes.select100}\n                                        native\n                                        value={gender}\n                                        onChange={e => setGender(e.target.value)}\n                                        label=\"Gender\"\n                                        inputProps={{\n                                            name: 'gender',\n                                            id: 'select-gender',\n                                        }}\n                                    >\n                                        <option value=\"FEMALE\">Female</option>\n                                        <option value=\"MALE\">Male</option>\n                                        <option value=\"OTHER\">Other</option>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n\n\n\n\n\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={age}\n                                    onInput={e => setAge(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"age\"\n                                    label=\"age\"\n                                    type=\"number\"\n                                    id=\"age\"\n                                />\n                            </Grid>\n\n\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={email}\n                                    onInput={e => setEmail(e.target.value)}\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={phoneNumber}\n                                    onInput={e => setPhoneNumber(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"mobile\"\n                                    label=\"Mobile No.\"\n                                    type=\"number\"\n                                    id=\"mobile\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={address}\n                                    onInput={e => setAddress(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"address\"\n                                    label=\"Address\"\n                                    type=\"text\"\n                                    id=\"address\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={pinCode}\n                                    onInput={e => setPinCode(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"pinCode\"\n                                    label=\"pinCode\"\n                                    type=\"text\"\n                                    id=\"pinCode\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Create Test Request\n                        </Button>\n                    </form>\n                </div>\n\n            </Container>\n        </React.Fragment>\n\n    )\n\n\n}\n\nexport default RequestTest\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\profile\\Profile.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\config\\reducers.js",["544"],"import {combineReducers} from 'redux';\r\nimport auth, {LOGOUT} from '../auth/authStore';\r\nimport authority from '../authority/store/authorityStore';\r\n\r\nconst appReducer = combineReducers({\r\n    auth,\r\n    authority\r\n})\r\n\r\nexport default (state, action) => {\r\n    const appState = action.type === LOGOUT ? undefined : { ...state }\r\n    return appReducer(appState, action)\r\n}\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\loader\\loading-indicator.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\confirm\\confirm-message-service.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\component\\Navbar.js",["545","546","547","548","549","550","551","552"],"import {AppBar, Button, Link, React, Toolbar, Typography, useDispatch, useHistory, useSelector,} from \"./index\"\nimport {makeStyles} from '@material-ui/core/styles';\nimport upgrad_logo from \"../upgrad.png\"\nimport {useLocation} from 'react-router-dom';\nimport {doLogout} from \"../auth/authDispatcher\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    '@global': {\n        body: {\n            backgroundColor: '#e6e6e6'\n        },\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: 'none',\n        },\n    },\n    appBar: {\n        borderBottom: `3px solid ${theme.palette.divider}`,\n    },\n    toolbar: {\n        flexWrap: 'wrap',\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n    },\n    link: {\n        margin: theme.spacing(1, 1.5),\n    },\n    activeLink: {\n        margin: theme.spacing(1, 1.5),\n        backgroundColor: \"#3f51b5\",\n        color: \"#ffffff\",\n        '&:hover': {\n            color: \"#3f51b5\",\n            backgroundColor: \"#ffffff\",\n            border:'1px solid #3f51b5'\n        },\n    },\n\n\n}));\n\n\nfunction Navbar(props) {\n\n    const dispatch = useDispatch()\n    const history = useHistory();\nconst location =useLocation();\n\n    function logout() {\n\n        doLogout(dispatch, history)\n\n\n    }\n\n    const classes = useStyles();\n    const {user, token, isLoggedIn, roles} = useSelector(state => state.auth);\n\n    let {isUser, isDoctor, isAuthority, isTester,isApproved} = roles\n\n    const isNotAuthority = (isLoggedIn == true) && (isAuthority == false);\n    const isNotLoggedIn = !isLoggedIn\n\n\n\n\n    const allMenus = [\n        {url: \"/dashboard\", label: \"Dashboard\", rule: isAuthority},\n        {url: \"/profile\", label: \"Profile\", rule: isLoggedIn},\n         {url: \"/request-test\", label: \"Request Test\", rule: isUser},\n        {url: \"/user-history\", label: \"Request History\", rule: isUser},\n        {url: \"/lab-history\", label: \"Request History\", rule: isTester},\n        {url: \"/consultation-history\", label: \"Request History\", rule: isDoctor},\n        {url: \"/pending-lab-tests\", label: \"Tests Requested\", rule: isTester},\n        {url: \"/pending-consultations\", label: \"Consultations Requested\", rule: isDoctor},\n        {url: \"/update-thresholds\", label: \"Settings\", rule: isAuthority},\n        {url: \"/pending-user-approvals\", label: \"Approve Users\", rule: isAuthority},\n        {url: \"/view-all-requests\", label: \"All Requests\", rule: isAuthority}\n    ];\n\n    const currentPath =location.pathname\n\n\n    const menusToBeDisplayed = allMenus.filter(value => value.rule).map(item=>{\n\n        const menuClassName = (item.url == currentPath)? classes.activeLink:classes.link;\n        return {...item, menuClassName}\n\n    })\n\n\n    return (\n        <React.Fragment>\n\n            <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n\n                    <img src={upgrad_logo} height=\"30\" alt=\"Upgrad\"/>\n\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                        &nbsp;\n\n                        <Button component={Link} variant=\"text\" to=\"/\" className={classes.link}>\n\n                            Upgrad Labs\n                        </Button>\n                    </Typography>\n\n\n                    <nav>\n\n                        {menusToBeDisplayed.map((item, index) => {\n                            return (\n                                <Button key={index} component={Link} variant=\"text\" color=\"primary\" to={item.url}\n                                        className={item.menuClassName}>\n                                    {item.label}\n                                </Button>);\n\n\n                        })}\n\n\n                    </nav>\n\n\n                    {(isLoggedIn) ?\n                        <Button id=\"btnlogout\" onClick={logout} color=\"secondary\" variant=\"outlined\" className={classes.link}>\n                            Logout\n                        </Button> : <div>\n                            <Button component={Link} to=\"/login\" color=\"secondary\" variant=\"outlined\"\n                                    className={classes.link}>\n                                Login\n                            </Button>\n                            <Button component={Link} to=\"/register\" color=\"primary\" variant=\"outlined\"\n                                    className={classes.link}>\n                                Register for test\n                            </Button></div>\n                    }\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n\n    )\n}\n\n\nexport default Navbar\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\services\\http-service.js",["553","554"],"import axios from \"axios\";\r\nimport {Observable} from \"rxjs\";\r\nimport {loadingIndicator} from \"../loader/loading-indicator\";\r\nimport {appNotification} from \"../notification/app-notification\";\r\n\r\nconst token = null;\r\n\r\nfunction setToken(token) {\r\n\r\n    if (token){\r\n        console.log(\"setting token\" , token)\r\n        axios.defaults.headers.common['Authorization'] = \"Bearer \" + token;\r\n    }\r\n    else\r\n        axios.defaults.headers.common['Authorization'] = null\r\n}\r\n\r\n\r\naxios.interceptors.request.use(req => {\r\n     console.log(`${req.method} ${req.url}`);\r\n\r\n    return req;\r\n});\r\n\r\nfunction uploadFileToServer(url,data) {\r\n\r\n    return makeAsObservable({\r\n        method: 'post',\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        url,\r\n        data\r\n    })\r\n    //\r\n    // return new Observable((observer) => {\r\n    //\r\n    //     loadingIndicator.show();\r\n    //     axios( )\r\n    //         .then((response) => {\r\n    //             loadingIndicator.hide();\r\n    //             observer.next(response.data);\r\n    //             observer.complete();\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             loadingIndicator.hide();\r\n    //             console.log(error)\r\n    //             if(error && error.response && error.response.data && error.response.data.message)\r\n    //                 observer.error(error.response.data.message);\r\n    //             else\r\n    //                 observer.error(\"Technical error , please try again\");\r\n    //\r\n    //\r\n    //         });\r\n    // });\r\n\r\n}\r\n\r\nfunction downloadFileFromServer(url,filename) {\r\n\r\n    loadingIndicator.show();\r\n    axios({\r\n        url: url,\r\n        method: 'GET',\r\n        responseType: 'blob', // important\r\n    }).then((response) => {\r\n        loadingIndicator.hide();\r\n        console.log( response.headers)\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', filename);\r\n        //link.setAttribute('download', response.headers[\"content-disposition\"].split(\"filename=\")[1])\r\n        link.click();\r\n        window.URL.revokeObjectURL(url);\r\n    }).catch((error) => {\r\n        loadingIndicator.hide();\r\n        appNotification.showError(\"Unable to download file from \" + url)\r\n\r\n\r\n    });\r\n\r\n}\r\n\r\nfunction makeAsObservable(request) {\r\n\r\n    return new Observable((observer) => {\r\n        loadingIndicator.show();\r\n        console.log(\"going  for\",request.url)\r\n        axios(request)\r\n            .then((response) => {\r\n                loadingIndicator.hide();\r\n                console.log(\"received for\",request.url)\r\n                observer.next(response.data);\r\n                observer.complete();\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"error for\",request.url)\r\n                loadingIndicator.hide();\r\n                if(error && error.response && error.response.data && error.response.data.message)\r\n                    observer.error(error.response.data.message);\r\n                else\r\n                    observer.error(\"Technical error , please try again\");\r\n\r\n\r\n            });\r\n    });\r\n\r\n}\r\n\r\nfunction post(url, data) {\r\n\r\n    return makeAsObservable({\r\n        method: 'post',\r\n        url,\r\n        data\r\n    });\r\n\r\n}\r\n\r\nfunction get(url) {\r\n\r\n    return makeAsObservable({\r\n        method: 'get',\r\n        url\r\n    });\r\n\r\n}\r\n\r\nfunction put(url, data) {\r\n\r\n    return makeAsObservable({\r\n        method: 'put',\r\n        url,\r\n        data\r\n    });\r\n\r\n}\r\n\r\nfunction deleteRequest(url) {\r\n\r\n    return makeAsObservable({\r\n        method: 'delete',\r\n        url\r\n    });\r\n\r\n}\r\n\r\nexport default {setToken, delete: deleteRequest, put, get, post,uploadFileToServer,downloadFileFromServer};\r\n// export default function cube() {\r\n//     return {setToken, delete: deleteRequest, put, get, post};\r\n// };\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\auth\\user.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\environment.js",["555"],"\r\nlet baseUrl;\r\nconst apiVersion = 'v1';\r\n\r\nconst hostname = window && window.location && window.location.hostname;\r\n\r\nconst cloudHosts = ['ec2-52-73-149-55.compute-1.amazonaws.com',\"52.73.149.55\"]\r\nif(cloudHosts.includes(hostname)) {\r\n    baseUrl = 'http://ec2-52-73-149-55.compute-1.amazonaws.com:8080';\r\n\r\n} else {\r\n    baseUrl = \"http://localhost:8080\";\r\n}\r\n\r\n\r\n\r\n\r\nexport const environment={\r\n    baseUrl\r\n}\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\auth\\authStore.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\notification\\app-notification.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\date-helpers.js",["556"],"export function padAsTwoDigit(input){\r\n\r\n    const val = \"\" + input;\r\n\r\n    return val.length == 2 ? val : (\"0\"+val)\r\n}\r\n\r\n\r\nexport function  getMonth(monthIndex){\r\n    return padAsTwoDigit(monthIndex +1);\r\n}\r\nexport function  getAsFormatted(now){\r\n\r\n   // const now = new Date();\r\n\r\n    return  now.getFullYear() + \"-\" + getMonth(now.getMonth()) + \"-\" + padAsTwoDigit(now.getDate())\r\n\r\n}\r\n\r\n\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\shared\\common-helpers.js",["557"],"import {appNotification} from \"./notification/app-notification\";\r\n\r\n\r\nexport function errorHandler(error) {\r\n    appNotification.showError(error)\r\n}\r\n\r\nfunction getNullOrEmpty(n) {\r\n    return n ? n : \"\"\r\n}\r\n\r\nexport function getNameAndInitials(firstName, lastName) {\r\n\r\n    let initials ;\r\n    let name = getNullOrEmpty(firstName) + \" \" + getNullOrEmpty(lastName)\r\n\r\n    const names = name.split(\" \")\r\n\r\n    initials = (names[0].charAt(0) + \"\" + names[1].charAt(0)).toUpperCase();\r\n\r\n    if(initials.trim().length ==0)\r\n        initials =\"UN\"\r\n    name=name.trim();\r\n    return {initials, name}\r\n}\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\testRequestDispatcher.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\RequestHistory.js",["558","559","560","561","562"],"import {Container, Grid, makeStyles, React, useEffect, useState,} from \"../component\"\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {appNotification} from \"../shared/notification/app-notification\";\r\n\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TestFlow from \"../testrequests/TestFlow\";\r\nimport {useGlobalStyles} from \"../styles/GlobalStyles\";\r\nimport {getRequestHistoryOptions} from \"../authority/shared/view-all-request-options\";\r\n\r\n\r\n\r\nfunction RequestHistory(props) {\r\n    const classes = useGlobalStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const [requests, setRequests] = useState([]);\r\n\r\n\r\n\r\n    let columns = [\r\n       {\r\n            name: \"Test Request ID\",\r\n            options: {\r\n                filter: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"Name\",\r\n            options: {\r\n                filter: true,\r\n            }\r\n        },\r\n        {\r\n\r\n            name: \"Age\",\r\n            options: {\r\n                filter: true,\r\n            }\r\n        },\r\n        {\r\n\r\n            name: \"Status\",\r\n            options: {\r\n                filter: true,\r\n            }\r\n        }\r\n\r\n    ];\r\n\r\n    const {actionColumns} =props\r\n\r\n    if(actionColumns && actionColumns.length > 0)\r\n        columns= columns.concat(actionColumns);\r\n\r\n    const options = getRequestHistoryOptions(requests)\r\n    // const oldOptions = {\r\n    //     filter: true,\r\n    //     filterType: 'dropdown',\r\n    //     responsive: 'standard',\r\n    //     selectableRows:'none',\r\n    //     expandableRows: true,\r\n    //     expandableRowsHeader: false,\r\n    //     expandableRowsOnClick: false,\r\n    //     isRowExpandable: (dataIndex, expandedRows) => {\r\n    //         const testRequest =  getTestRequest(dataIndex)\r\n    //\r\n    //         return testRequest.status !== \"INITIATED\";\r\n    //     },\r\n    //     renderExpandableRow: (rowData, rowMeta) => {\r\n    //\r\n    //         const {dataIndex} = rowMeta\r\n    //\r\n    //         const testRequest =  getTestRequest(dataIndex)\r\n    //         const {requestId} =  testRequest\r\n    //         const colSpan = rowData.length + 1;\r\n    //         return (\r\n    //             <TableRow>\r\n    //                 <TableCell colSpan={colSpan}>\r\n    //                     <TestFlow requestId={requestId}></TestFlow>\r\n    //                 </TableCell>\r\n    //             </TableRow>\r\n    //         );\r\n    //\r\n    //     },\r\n    //     onRowExpansionChange: (curExpanded, allExpanded, rowsExpanded) => {\r\n    //\r\n    //     }\r\n    // };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function reloadTests() {\r\n\r\n        const {getMyHistory,onDataLoaded} = props\r\n        getMyHistory()\r\n            .subscribe((allTestRequests) => {\r\n\r\n\r\n                setRequests(allTestRequests)\r\n                const buffer = allTestRequests.map(item=>{\r\n\r\n                    return [item.requestId,item.name,item.age,item.status]\r\n                })\r\n\r\n                const results = []\r\n                results.push(buffer)\r\n                setData(buffer)\r\n                if(onDataLoaded)\r\n                    onDataLoaded(allTestRequests)\r\n\r\n            }, (error => {\r\n\r\n                // console.log(error)\r\n                appNotification.showError(error)\r\n            }))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        reloadTests();\r\n\r\n\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\r\n                <h1>\r\n                    Request History\r\n                </h1>\r\n                <hr />\r\n            </Container>\r\n            <Container component=\"main\" maxWidth=\"md\">\r\n                <Grid container>\r\n                    <Grid item md={12}>\r\n\r\n                        <MUIDataTable title={\"Request History\"} data={data} columns={columns} options={options} />\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </React.Fragment>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default RequestHistory;\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\store\\authorityStore.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\styles\\GlobalStyles.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\shared\\dashboard-charts.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\shared\\authorityDispatcher.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\shared\\view-all-request-options.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\config\\create-reducer.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\TestFlow.js",["563","564","565","566","567","568","569","570"],"import {\n    Container,\n    Grid,\n    makeStyles,\n    Paper,\n    React,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow, useEffect,\n    useSelector,\n} from \"../component\"\nimport {doGetMyTestRequests, doGetTestRequestFlow} from \"./testRequestDispatcher\";\nimport {appNotification} from \"../shared/notification/app-notification\";\nimport {useState} from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport {withStyles} from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport TestRequestDetail from \"./TestRequestDetail\";\nimport LabResultDetail from \"./LabResultDetail\";\nimport ConsultationResultDetail from \"./ConsultationResultDetail\";\nimport {errorHandler} from \"../shared/common-helpers\";\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    heroContent: {\n        padding: theme.spacing(3, 0, 2),\n    },\n    table: {\n        minWidth: 700,\n    },\n    dateColumn:{\n        width:130\n    }\n}));\n\n\n\n\n\n\nfunction TestFlow(props) {\n\n    const classes = useStyles();\n\n    const {testRequest} = props\n\n    const {requestId} =testRequest\n    const [rows,setRows] = useState([])\n\n    let labResult=null\n    let consultation=null\n\n    if(testRequest.status !== \"INITIATED\" && testRequest.status !== \"LAB_TEST_IN_PROGRESS\" )\n        labResult=testRequest.labResult;\n\n    if(testRequest.status === \"COMPLETED\"  )\n        consultation=testRequest.consultation;\n\n    function reloadRows(){\n\n        doGetTestRequestFlow(requestId)\n            .subscribe((results) => {\n                console.log(results)\n                setRows(results)\n\n            }, errorHandler)\n\n    }\n\n\n    useEffect(() => {\n\n\n        reloadRows();\n\n\n\n    }, [])\n\n\n\n\n    return (\n        <React.Fragment>\n\n\n            <Grid container spacing={2}  className={classes.formContainer} >\n\n                {/*<Grid item xs={12} >*/}\n                {/*    <TestRequestDetail testRequest={testRequest}></TestRequestDetail>*/}\n                {/*</Grid>*/}\n                <Grid item xs={6} >\n\n\n                    <LabResultDetail labResult={labResult}></LabResultDetail>\n\n\n                </Grid>\n                <Grid item xs={6} >\n\n                    <ConsultationResultDetail consultation={consultation}></ConsultationResultDetail>\n                </Grid>\n            </Grid>\n\n\n                <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n                <h4>\n                    TestRequest Flow\n            </h4>\n                <hr />\n            </Container>\n            <Container maxWidth=\"md\">\n\n                    <Grid md={12} item>\n\n                        <Table className={classes.table} aria-label=\"Data Flow\">\n                            <TableHead>\n                                <TableRow>\n                                    <StyledTableCell>Id</StyledTableCell>\n                                    <StyledTableCell className={classes.dateColumn}>Date</StyledTableCell>\n                                    <StyledTableCell align=\"right\">From Status</StyledTableCell>\n                                    <StyledTableCell align=\"right\">To Status</StyledTableCell>\n                                    <StyledTableCell align=\"right\">Done By</StyledTableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n\n                                {rows.map((row) => (\n                                    <StyledTableRow  key={row.id}>\n                                        <StyledTableCell component=\"th\" scope=\"row\">\n                                            {row.id}\n                                        </StyledTableCell>\n                                        <StyledTableCell className={classes.dateColumn} align=\"right\">{row.happenedOn}</StyledTableCell>\n                                        <StyledTableCell align=\"right\">{row.fromStatus}</StyledTableCell>\n                                        <StyledTableCell align=\"right\">{row.toStatus}</StyledTableCell>\n                                        <StyledTableCell align=\"right\">{row.changedBy.userName}</StyledTableCell>\n                                    </StyledTableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n\n\n\n                    </Grid>\n\n            </Container>\n\n        </React.Fragment>\n    )\n}\n\nexport default TestFlow\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\shared\\authority-data-parser.js",["571","572","573","574"],"export function getAllDataWithPinCodes(inputs,  thresholds) {\r\n\r\n    const pincodes = groupTestRequestsByPincode(inputs,thresholds)\r\n\r\n    const results = []\r\n    Object.keys(pincodes).forEach(key=>{\r\n        const value = pincodes[key]\r\n        results.push({...value,pinCode:key})\r\n\r\n    })\r\n\r\n    return results;\r\n}\r\n\r\nexport function mergeZoneStatusWithPincode(thresholds, pincodes) {\r\n    const thresholdValues = {\r\n\r\n        \"RED\": 0,\r\n        \"YELLOW\": 0,\r\n        \"GREEN\": 0\r\n    }\r\n\r\n    thresholds.forEach(threshold => {\r\n\r\n        const {thresholdType, maxLimit} = threshold\r\n        thresholdValues[thresholdType] = maxLimit\r\n\r\n    });\r\n\r\n    Object.keys(pincodes).forEach(key => {\r\n\r\n        const {positiveCount} = pincodes[key];\r\n\r\n        if (positiveCount >= thresholdValues[\"RED\"])\r\n            pincodes[key]['zoneType'] = 'RED'\r\n        else if (positiveCount >= thresholdValues[\"GREEN\"] && positiveCount <= thresholdValues[\"YELLOW\"])\r\n            pincodes[key]['zoneType'] = 'YELLOW'\r\n        else\r\n            pincodes[key]['zoneType'] = 'GREEN'\r\n\r\n\r\n    })\r\n\r\n    return pincodes;\r\n}\r\n\r\nfunction createPincodeData(testRequest) {\r\n\r\n    const {positive,negative,homeQuarantine,admitted,tested} = parseFromTestRequest(testRequest)\r\n\r\n\r\n    return {\r\n        positiveCount: positive,\r\n        negativeCount: negative,\r\n        homeQuarantineCount: homeQuarantine,\r\n        admittedCount: admitted,\r\n        testedCount: tested,\r\n        zoneType: \"\"\r\n    };\r\n}\r\n\r\nfunction parseFromTestRequest(item){\r\n    const {pinCode, labResult, consultation} = item\r\n    const {suggestion} = consultation\r\n    const {result} = labResult\r\n    const positive = (result == 'POSITIVE') ? 1 : 0;\r\n    const negative = (result == 'POSITIVE') ? 0 : 1;\r\n    const homeQuarantine = (suggestion == 'HOME_QUARANTINE') ? 1 : 0;\r\n    const admitted = (suggestion == 'ADMIT') ? 1 : 0;\r\n    const tested = 1;\r\n\r\n    return {pinCode, labResult, consultation,positive,negative,homeQuarantine,admitted,tested}\r\n}\r\n\r\n\r\nfunction addTestRequestToPincode(existingPincodeData,testRequest) {\r\n\r\n\r\n    const {positive,negative,homeQuarantine,admitted,tested} = parseFromTestRequest(testRequest)\r\n    const {positiveCount, homeQuarantineCount, admittedCount,negativeCount, testedCount} = existingPincodeData;\r\n\r\n    return     {\r\n        positiveCount: positiveCount + positive,\r\n        negativeCount: negativeCount + negative,\r\n        homeQuarantineCount: homeQuarantineCount + homeQuarantine,\r\n        admittedCount: admittedCount + admitted,\r\n        testedCount: testedCount + tested\r\n    }\r\n\r\n}\r\n\r\nexport function groupTestRequestsByPincode(inputs, thresholds) {\r\n    const pincodes ={}\r\n    const items = inputs.filter(item => item.status === 'COMPLETED')\r\n\r\n    items.forEach(function (item) {\r\n        const {pinCode} = item\r\n        if (pincodes.hasOwnProperty(pinCode))\r\n            pincodes[pinCode] = addTestRequestToPincode( pincodes[pinCode],item)\r\n         else\r\n            pincodes[pinCode] = createPincodeData(item)\r\n\r\n\r\n    });\r\n\r\n    return  mergeZoneStatusWithPincode(thresholds, pincodes);;\r\n}\r\n\r\nexport  function mergeTestRequestsAndThresholdDetails(testRequests, thresholds) {\r\n    const pincodes =groupTestRequestsByPincode(testRequests,  thresholds);\r\n\r\n    return testRequests.map(item =>{\r\n\r\n        const {pinCode} =item;\r\n        item.pinCodeInfo = pincodes[pinCode]\r\n        return item;\r\n    });\r\n\r\n}\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\shared\\approval-parser.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\shared\\pending-user-utils.js",["575"],"import {doGetPendingApprovals} from \"./authorityDispatcher\";\r\nimport {appNotification} from \"../../shared/notification/app-notification\";\r\nimport {LOGIN} from \"../../auth/authStore\";\r\nimport {UPDATE_PENDING_USERDATA} from \"../store/authorityStore\";\r\n\r\nexport function reloadPendingApprovals(dispatch) {\r\n\r\n    doGetPendingApprovals()\r\n        .subscribe((pendingUsers) => {\r\n\r\n            dispatch({type: UPDATE_PENDING_USERDATA, \"payload\": pendingUsers});\r\n        }, (error => {\r\n\r\n            // console.log(error)\r\n            appNotification.showError(error)\r\n        }))\r\n}\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\components\\ViewAttachmentButton.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\authority\\components\\PendingApprovalActions.js",["576"],"import IconButton from \"@material-ui/core/IconButton\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport {React, useSelector} from \"../../component\";\r\nimport {confirmMessageService} from \"../../shared/confirm/confirm-message-service\";\r\nimport {doApproveUser, doRejectUser, downloadDocument} from \"../shared/authorityDispatcher\";\r\nimport {appNotification} from \"../../shared/notification/app-notification\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {reloadPendingApprovals} from \"../shared/pending-user-utils\";\r\nimport {useGlobalStyles} from \"../../styles/GlobalStyles\";\r\nimport {errorHandler} from \"../../shared/common-helpers\";\r\n\r\nexport function PendingApprovalActions(props){\r\n    const classes = useGlobalStyles();\r\n    const {dataIndex} =props\r\n\r\n    const {pendingUsers} = useSelector(state => state.authority);\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    async function onApproveUserClick(index){\r\n        const pendingUser = pendingUsers[index]\r\n\r\n\r\n        await confirmMessageService.show(\"Do you want to approve \" + pendingUser.userName + \"?\")\r\n        console.log(\"confirmMessageService approve user\")\r\n        doApproveUser(pendingUser.id).subscribe((res)=>{\r\n            console.log(\"doApproveUser complete \")\r\n            appNotification.showSuccess(\"Successfully approved \" + pendingUser.role + \"  \" + pendingUser.firstName)\r\n\r\n            reloadPendingApprovals(dispatch);\r\n        }, errorHandler);\r\n\r\n\r\n\r\n    }\r\n\r\n    async function onRejectUserClick(index){\r\n        const pendingUser = pendingUsers[index]\r\n\r\n\r\n        await confirmMessageService.show(\"Do you want to Reject \" + pendingUser.userName + \"?\")\r\n\r\n        doRejectUser(pendingUser.id).subscribe((res)=>{\r\n            appNotification.showSuccess(\"Rejected \" + pendingUser.role + \"  \" + pendingUser.firstName)\r\n            reloadPendingApprovals(dispatch);\r\n        }, errorHandler);\r\n\r\n\r\n\r\n    }\r\n\r\n    return <div>\r\n\r\n        <IconButton aria-label=\"Approve\" color=\"primary\"\r\n                    onClick={() => {\r\n                        onApproveUserClick(dataIndex)\r\n                    }}\r\n                    title=\"Approve\" className={classes.button}>\r\n            <CheckIcon fontSize=\"large\" title=\"Approve\" />\r\n        </IconButton>\r\n        <IconButton aria-label=\"Reject\" color=\"secondary\"\r\n                    onClick={() => {\r\n                        onRejectUserClick(dataIndex)\r\n                    }}\r\n                    title=\"Reject\" className={classes.button}>\r\n            <ClearIcon fontSize=\"large\" title=\"Reject\" />\r\n        </IconButton>\r\n\r\n\r\n\r\n    </div>\r\n\r\n}\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\ConsultationResultDetail.js",["577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592"],"import Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles, React, useHistory, useState} from \"../component\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Fragment} from \"react\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport {blue} from '@material-ui/core/colors';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport WifiIcon from '@material-ui/icons/Wifi';\r\nimport BluetoothIcon from '@material-ui/icons/Bluetooth';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {getNameAndInitials} from \"../shared/common-helpers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    avatar: {\r\n        backgroundColor: blue[500],\r\n    },\r\n    w100: {\r\n        width: '100%',\r\n    },\r\n    listroot: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    listLabel: {\r\n        fontWeight: \"bold\"\r\n    },\r\n    listValue: {\r\n        fontWeight: \"normal\"\r\n    }\r\n}));\r\n\r\n\r\nfunction ConsultationResultDetail({consultation}) {\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    if (!consultation)\r\n        return <Fragment></Fragment>\r\n\r\n    const { comments, suggestion, doctor, updatedOn} = consultation\r\n    const {firstName, lastName, email, phoneNumber} = doctor\r\n\r\n\r\n\r\n\r\n\r\n    const {initials,name} = getNameAndInitials(firstName, lastName)\r\n\r\n    return (<Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                        {initials}\r\n                    </Avatar>\r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                }\r\n                title={\"Diagnosis\"}\r\n                subheader={\"Updated on \" + new Date(updatedOn).toDateString() + \" by \" + name}\r\n            />\r\n            <CardContent>\r\n                <CardContent>\r\n\r\n\r\n                    <small>\r\n                        Suggestion : {suggestion}\r\n                        <Divider></Divider>\r\n                        Comments : {comments}\r\n\r\n                    </small>\r\n\r\n\r\n                </CardContent>\r\n\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <IconButton title={email} aria-label=\"Send Email\" href={\"mailto:\" + email}>\r\n                    <MailIcon/>\r\n                </IconButton>\r\n                <IconButton title={phoneNumber} aria-label=\"call\" href={\"tel:\" + phoneNumber}>\r\n                    <PhoneIcon/>\r\n                </IconButton>\r\n\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nexport default ConsultationResultDetail;\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\LabResultDetail.js",["593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609"],"import Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles, React, useHistory, useState} from \"../component\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Fragment} from \"react\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport {blue} from '@material-ui/core/colors';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport WifiIcon from '@material-ui/icons/Wifi';\r\nimport BluetoothIcon from '@material-ui/icons/Bluetooth';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {getNameAndInitials} from \"../shared/common-helpers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    avatar: {\r\n        backgroundColor: blue[500],\r\n    },\r\n    w100: {\r\n        width: '100%',\r\n    },\r\n    listroot: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    listLabel: {\r\n        fontWeight: \"bold\"\r\n    },\r\n    listValue: {\r\n        fontWeight: \"normal\"\r\n    }\r\n}));\r\n\r\n\r\nfunction LabResultDetail({labResult}) {\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    if (!labResult)\r\n        return <Fragment></Fragment>\r\n\r\n    const {bloodPressure, comments, heartBeat, oxygenLevel, result, temperature, tester, updatedOn} = labResult\r\n    const {firstName, lastName, email, phoneNumber} = tester\r\n\r\n\r\n\r\nconst {initials,name} = getNameAndInitials(firstName, lastName)\r\n\r\n\r\n    return (<Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                        {initials}\r\n                    </Avatar>\r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                }\r\n                title={\"Test Results\"}\r\n                subheader={\"Updated on \" + new Date(updatedOn).toDateString() + \" by \" + name}\r\n            />\r\n            <CardContent>\r\n                <CardContent>\r\n\r\n\r\n                    <small>\r\n                        Blood Pressure : {bloodPressure}\r\n                        <Divider></Divider>\r\n                        Heart Beat : {heartBeat}\r\n                        <Divider></Divider>\r\n                        Oxygen Level : {oxygenLevel}\r\n                        <Divider></Divider>\r\n                        Temperature : {temperature}\r\n                        <Divider></Divider>\r\n                        Test Result : {result}\r\n                    </small>\r\n\r\n\r\n                </CardContent>\r\n\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <IconButton title={email} aria-label=\"Send Email\" href={\"mailto:\" + email}>\r\n                    <MailIcon/>\r\n                </IconButton>\r\n                <IconButton title={phoneNumber} aria-label=\"call\" href={\"tel:\" + phoneNumber}>\r\n                    <PhoneIcon/>\r\n                </IconButton>\r\n\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nexport default LabResultDetail;\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\testrequests\\TestRequestDetail.js",["610","611","612","613","614","615","616","617"],"import Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles, React, useHistory} from \"../component\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Fragment} from \"react\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport { red } from '@material-ui/core/colors';\r\nimport {getNameAndInitials} from \"../shared/common-helpers\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n    w100:{\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\n\r\nfunction TestRequestDetail({testRequest}) {\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    if (! testRequest)\r\n        return <Fragment></Fragment>\r\n\r\n    const {name,address,age,email,created,phoneNumber,status,gender,createdBy} =testRequest\r\n    const {userName} =createdBy\r\n\r\n\r\n\r\n    const {initials} = getNameAndInitials(name, \"\")\r\n\r\n\r\n    function sendEmail(){\r\n        console.log(email)\r\n        window.location.href = \"mailto:\" + encodeURIComponent(email);\r\n    }\r\n    function callUser(){\r\n\r\n\r\n        window.location.href = \"tel:\" + phoneNumber;\r\n    }\r\n\r\n\r\n    return (<Card className={classes.root}>\r\n           <CardHeader\r\n               avatar={\r\n                   <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                      {initials}\r\n                   </Avatar>\r\n               }\r\n               action={\r\n                   <IconButton aria-label=\"settings\">\r\n                       <MoreVertIcon />\r\n                   </IconButton>\r\n               }\r\n               title={name}\r\n               subheader={\"Created on \" + new Date(created).toDateString()}\r\n           />\r\n           <CardContent>\r\n               <CardContent>\r\n                   <Typography variant=\"h5\" component=\"h2\">\r\n                       {age} years of age\r\n                   </Typography>\r\n\r\n                   <Typography variant=\"body2\" component=\"p\">\r\n                       {address}\r\n                   </Typography>\r\n                   <Typography className={classes.pos} color=\"textSecondary\">\r\n                       {phoneNumber}\r\n                   </Typography>\r\n               </CardContent>\r\n\r\n           </CardContent>\r\n           <CardActions disableSpacing>\r\n               <IconButton title={email} aria-label=\"Send Email\" href={\"mailto:\" + email} >\r\n                   <MailIcon />\r\n               </IconButton>\r\n               <IconButton title={phoneNumber} aria-label=\"call\" href={\"tel:\" + phoneNumber} >\r\n                   <PhoneIcon />\r\n               </IconButton>\r\n\r\n           </CardActions>\r\n           </Card>\r\n    );\r\n\r\n}\r\n\r\nexport default TestRequestDetail;\r\n","D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\lab\\labDispatcher.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\upstacUI\\upstac-ui\\src\\consultation\\consultationDispatcher.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\index.js",["618","619","620"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\component\\LoadingView.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\App.js",["621","622","623","624","625","626"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\serviceWorker.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\config\\store.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\confirm\\confirm-message-component.js",["627","628","629"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\loader\\loading-indicator-component.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\component\\index.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\GuardedRoute.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\auth\\Login.js",["630","631","632","633","634","635"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\auth\\authDispatcher.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\lab\\LabHistory.js",["636"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\auth\\Register.js",["637","638","639","640","641","642","643","644"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\lab\\PendingLabTests.js",["645","646"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\consultation\\PendingConsultations.js",["647","648"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\lab\\UpdateLabResult.js",["649","650","651"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\consultation\\UpdateConsultation.js",["652","653","654","655"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\UpdateThreshold.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\consultation\\ConsultationHistory.js",["656"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\UserHistory.js",["657","658","659"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\ViewAllRequests.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\AuthorityDashboard.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\RequestTest.js",["660","661","662"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\PendingApprovals.js",["663","664","665"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\notification\\app-notification-component.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\config\\reducers.js",["666"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\profile\\Profile.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\documents\\UploadDocument.js",["667","668","669","670","671"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\confirm\\confirm-message-service.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\loader\\loading-indicator.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\component\\Navbar.js",["672","673","674","675","676","677","678","679"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\services\\http-service.js",["680","681"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\auth\\user.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\environment.js",["682"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\notification\\app-notification.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\RequestHistory.js",["683","684","685","686","687"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\auth\\authStore.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\date-helpers.js",["688"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\lab\\labDispatcher.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\styles\\GlobalStyles.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\store\\authorityStore.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\shared\\pending-user-utils.js",["689"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\components\\PendingApprovalActions.js",["690"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\components\\ViewAttachmentButton.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\shared\\common-helpers.js",["691"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\testRequestDispatcher.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\shared\\dashboard-charts.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\shared\\authorityDispatcher.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\config\\create-reducer.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\shared\\view-all-request-options.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\TestFlow.js",["692","693","694","695","696","697","698","699"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\shared\\approval-parser.js",[],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\authority\\shared\\authority-data-parser.js",["700","701","702","703"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\ConsultationResultDetail.js",["704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\LabResultDetail.js",["720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\testrequests\\TestRequestDetail.js",["737","738","739","740","741","742","743","744"],"D:\\online course\\Upgrad-M.Sc\\upstac unit test module assignment\\assignment\\upstac-ui\\src\\consultation\\consultationDispatcher.js",[],{"ruleId":"745","severity":1,"message":"746","line":11,"column":30,"nodeType":"747","messageId":"748","endLine":11,"endColumn":38},{"ruleId":"745","severity":1,"message":"749","line":12,"column":8,"nodeType":"747","messageId":"748","endLine":12,"endColumn":33},{"ruleId":"745","severity":1,"message":"750","line":13,"column":8,"nodeType":"747","messageId":"748","endLine":13,"endColumn":31},{"ruleId":"751","replacedBy":"752"},{"ruleId":"753","replacedBy":"754"},{"ruleId":"745","severity":1,"message":"755","line":1,"column":9,"nodeType":"747","messageId":"748","endLine":1,"endColumn":20},{"ruleId":"745","severity":1,"message":"756","line":1,"column":48,"nodeType":"747","messageId":"748","endLine":1,"endColumn":54},{"ruleId":"745","severity":1,"message":"757","line":53,"column":9,"nodeType":"747","messageId":"748","endLine":53,"endColumn":16},{"ruleId":"745","severity":1,"message":"758","line":56,"column":9,"nodeType":"747","messageId":"748","endLine":56,"endColumn":13},{"ruleId":"745","severity":1,"message":"759","line":58,"column":46,"nodeType":"747","messageId":"748","endLine":58,"endColumn":56},{"ruleId":"760","severity":1,"message":"761","line":75,"column":6,"nodeType":"762","endLine":75,"endColumn":13,"suggestions":"763"},{"ruleId":"745","severity":1,"message":"764","line":98,"column":22,"nodeType":"747","messageId":"748","endLine":98,"endColumn":36},{"ruleId":"745","severity":1,"message":"765","line":98,"column":47,"nodeType":"747","messageId":"748","endLine":98,"endColumn":61},{"ruleId":"766","severity":1,"message":"767","line":102,"column":19,"nodeType":"768","messageId":"769","endLine":102,"endColumn":21},{"ruleId":"745","severity":1,"message":"770","line":11,"column":5,"nodeType":"747","messageId":"748","endLine":11,"endColumn":13},{"ruleId":"745","severity":1,"message":"771","line":15,"column":5,"nodeType":"747","messageId":"748","endLine":15,"endColumn":13},{"ruleId":"745","severity":1,"message":"772","line":62,"column":12,"nodeType":"747","messageId":"748","endLine":62,"endColumn":16},{"ruleId":"745","severity":1,"message":"773","line":62,"column":18,"nodeType":"747","messageId":"748","endLine":62,"endColumn":25},{"ruleId":"745","severity":1,"message":"774","line":63,"column":12,"nodeType":"747","messageId":"748","endLine":63,"endColumn":25},{"ruleId":"745","severity":1,"message":"775","line":63,"column":27,"nodeType":"747","messageId":"748","endLine":63,"endColumn":44},{"ruleId":"745","severity":1,"message":"776","line":126,"column":19,"nodeType":"747","messageId":"748","endLine":126,"endColumn":30},{"ruleId":"745","severity":1,"message":"777","line":127,"column":19,"nodeType":"747","messageId":"748","endLine":127,"endColumn":24},{"ruleId":"745","severity":1,"message":"778","line":3,"column":5,"nodeType":"747","messageId":"748","endLine":3,"endColumn":13},{"ruleId":"745","severity":1,"message":"779","line":6,"column":5,"nodeType":"747","messageId":"748","endLine":6,"endColumn":21},{"ruleId":"745","severity":1,"message":"780","line":20,"column":9,"nodeType":"747","messageId":"748","endLine":20,"endColumn":23},{"ruleId":"745","severity":1,"message":"781","line":70,"column":15,"nodeType":"747","messageId":"748","endLine":70,"endColumn":23},{"ruleId":"745","severity":1,"message":"776","line":76,"column":23,"nodeType":"747","messageId":"748","endLine":76,"endColumn":34},{"ruleId":"745","severity":1,"message":"777","line":77,"column":23,"nodeType":"747","messageId":"748","endLine":77,"endColumn":28},{"ruleId":"745","severity":1,"message":"782","line":1,"column":26,"nodeType":"747","messageId":"748","endLine":1,"endColumn":36},{"ruleId":"745","severity":1,"message":"783","line":20,"column":11,"nodeType":"747","messageId":"748","endLine":20,"endColumn":19},{"ruleId":"745","severity":1,"message":"782","line":1,"column":26,"nodeType":"747","messageId":"748","endLine":1,"endColumn":36},{"ruleId":"745","severity":1,"message":"784","line":9,"column":9,"nodeType":"747","messageId":"748","endLine":9,"endColumn":20},{"ruleId":"766","severity":1,"message":"767","line":32,"column":85,"nodeType":"768","messageId":"769","endLine":32,"endColumn":87},{"ruleId":"745","severity":1,"message":"785","line":9,"column":5,"nodeType":"747","messageId":"748","endLine":9,"endColumn":14},{"ruleId":"745","severity":1,"message":"786","line":17,"column":9,"nodeType":"747","messageId":"748","endLine":17,"endColumn":20},{"ruleId":"745","severity":1,"message":"784","line":18,"column":9,"nodeType":"747","messageId":"748","endLine":18,"endColumn":20},{"ruleId":"760","severity":1,"message":"787","line":126,"column":8,"nodeType":"762","endLine":126,"endColumn":10,"suggestions":"788"},{"ruleId":"766","severity":1,"message":"767","line":33,"column":85,"nodeType":"768","messageId":"769","endLine":33,"endColumn":87},{"ruleId":"745","severity":1,"message":"789","line":69,"column":9,"nodeType":"747","messageId":"748","endLine":69,"endColumn":17},{"ruleId":"745","severity":1,"message":"783","line":71,"column":11,"nodeType":"747","messageId":"748","endLine":71,"endColumn":19},{"ruleId":"760","severity":1,"message":"787","line":133,"column":8,"nodeType":"762","endLine":133,"endColumn":10,"suggestions":"790"},{"ruleId":"745","severity":1,"message":"791","line":17,"column":12,"nodeType":"747","messageId":"748","endLine":17,"endColumn":24},{"ruleId":"766","severity":1,"message":"767","line":98,"column":26,"nodeType":"768","messageId":"769","endLine":98,"endColumn":28},{"ruleId":"760","severity":1,"message":"792","line":105,"column":3,"nodeType":"762","endLine":105,"endColumn":24,"suggestions":"793"},{"ruleId":"745","severity":1,"message":"794","line":1,"column":9,"nodeType":"747","messageId":"748","endLine":1,"endColumn":15},{"ruleId":"745","severity":1,"message":"782","line":1,"column":17,"nodeType":"747","messageId":"748","endLine":1,"endColumn":27},{"ruleId":"745","severity":1,"message":"795","line":4,"column":9,"nodeType":"747","messageId":"748","endLine":4,"endColumn":17},{"ruleId":"745","severity":1,"message":"782","line":8,"column":5,"nodeType":"747","messageId":"748","endLine":8,"endColumn":15},{"ruleId":"745","severity":1,"message":"784","line":14,"column":9,"nodeType":"747","messageId":"748","endLine":14,"endColumn":20},{"ruleId":"745","severity":1,"message":"786","line":17,"column":9,"nodeType":"747","messageId":"748","endLine":17,"endColumn":20},{"ruleId":"745","severity":1,"message":"796","line":31,"column":12,"nodeType":"747","messageId":"748","endLine":31,"endColumn":20},{"ruleId":"766","severity":1,"message":"767","line":63,"column":39,"nodeType":"768","messageId":"769","endLine":63,"endColumn":41},{"ruleId":"745","severity":1,"message":"797","line":62,"column":12,"nodeType":"747","messageId":"748","endLine":62,"endColumn":18},{"ruleId":"745","severity":1,"message":"798","line":72,"column":12,"nodeType":"747","messageId":"748","endLine":72,"endColumn":20},{"ruleId":"745","severity":1,"message":"799","line":72,"column":22,"nodeType":"747","messageId":"748","endLine":72,"endColumn":33},{"ruleId":"800","severity":1,"message":"801","line":10,"column":1,"nodeType":"802","endLine":13,"endColumn":2},{"ruleId":"745","severity":1,"message":"803","line":61,"column":12,"nodeType":"747","messageId":"748","endLine":61,"endColumn":16},{"ruleId":"745","severity":1,"message":"777","line":61,"column":18,"nodeType":"747","messageId":"748","endLine":61,"endColumn":23},{"ruleId":"745","severity":1,"message":"759","line":63,"column":50,"nodeType":"747","messageId":"748","endLine":63,"endColumn":60},{"ruleId":"745","severity":1,"message":"804","line":65,"column":11,"nodeType":"747","messageId":"748","endLine":65,"endColumn":25},{"ruleId":"766","severity":1,"message":"767","line":65,"column":40,"nodeType":"768","messageId":"769","endLine":65,"endColumn":42},{"ruleId":"766","severity":1,"message":"767","line":65,"column":65,"nodeType":"768","messageId":"769","endLine":65,"endColumn":67},{"ruleId":"745","severity":1,"message":"805","line":66,"column":11,"nodeType":"747","messageId":"748","endLine":66,"endColumn":24},{"ruleId":"766","severity":1,"message":"767","line":90,"column":41,"nodeType":"768","messageId":"769","endLine":90,"endColumn":43},{"ruleId":"745","severity":1,"message":"777","line":6,"column":7,"nodeType":"747","messageId":"748","endLine":6,"endColumn":12},{"ruleId":"800","severity":1,"message":"806","line":149,"column":1,"nodeType":"802","endLine":149,"endColumn":108},{"ruleId":"745","severity":1,"message":"807","line":3,"column":7,"nodeType":"747","messageId":"748","endLine":3,"endColumn":17},{"ruleId":"766","severity":1,"message":"767","line":5,"column":23,"nodeType":"768","messageId":"769","endLine":5,"endColumn":25},{"ruleId":"766","severity":1,"message":"767","line":21,"column":31,"nodeType":"768","messageId":"769","endLine":21,"endColumn":33},{"ruleId":"745","severity":1,"message":"782","line":1,"column":26,"nodeType":"747","messageId":"748","endLine":1,"endColumn":36},{"ruleId":"745","severity":1,"message":"808","line":5,"column":8,"nodeType":"747","messageId":"748","endLine":5,"endColumn":16},{"ruleId":"745","severity":1,"message":"809","line":6,"column":8,"nodeType":"747","messageId":"748","endLine":6,"endColumn":17},{"ruleId":"745","severity":1,"message":"810","line":7,"column":8,"nodeType":"747","messageId":"748","endLine":7,"endColumn":16},{"ruleId":"760","severity":1,"message":"811","line":133,"column":8,"nodeType":"762","endLine":133,"endColumn":10,"suggestions":"812"},{"ruleId":"745","severity":1,"message":"813","line":5,"column":5,"nodeType":"747","messageId":"748","endLine":5,"endColumn":10},{"ruleId":"745","severity":1,"message":"814","line":10,"column":5,"nodeType":"747","messageId":"748","endLine":10,"endColumn":19},{"ruleId":"745","severity":1,"message":"815","line":12,"column":5,"nodeType":"747","messageId":"748","endLine":12,"endColumn":16},{"ruleId":"745","severity":1,"message":"816","line":14,"column":9,"nodeType":"747","messageId":"748","endLine":14,"endColumn":28},{"ruleId":"745","severity":1,"message":"817","line":15,"column":9,"nodeType":"747","messageId":"748","endLine":15,"endColumn":24},{"ruleId":"745","severity":1,"message":"818","line":19,"column":8,"nodeType":"747","messageId":"748","endLine":19,"endColumn":11},{"ruleId":"745","severity":1,"message":"819","line":20,"column":8,"nodeType":"747","messageId":"748","endLine":20,"endColumn":25},{"ruleId":"760","severity":1,"message":"820","line":100,"column":8,"nodeType":"762","endLine":100,"endColumn":10,"suggestions":"821"},{"ruleId":"766","severity":1,"message":"767","line":66,"column":30,"nodeType":"768","messageId":"769","endLine":66,"endColumn":32},{"ruleId":"766","severity":1,"message":"767","line":67,"column":30,"nodeType":"768","messageId":"769","endLine":67,"endColumn":32},{"ruleId":"766","severity":1,"message":"767","line":68,"column":40,"nodeType":"768","messageId":"769","endLine":68,"endColumn":42},{"ruleId":"766","severity":1,"message":"767","line":69,"column":34,"nodeType":"768","messageId":"769","endLine":69,"endColumn":36},{"ruleId":"745","severity":1,"message":"822","line":3,"column":9,"nodeType":"747","messageId":"748","endLine":3,"endColumn":14},{"ruleId":"745","severity":1,"message":"823","line":6,"column":38,"nodeType":"747","messageId":"748","endLine":6,"endColumn":54},{"ruleId":"745","severity":1,"message":"813","line":1,"column":8,"nodeType":"747","messageId":"748","endLine":1,"endColumn":13},{"ruleId":"745","severity":1,"message":"824","line":2,"column":28,"nodeType":"747","messageId":"748","endLine":2,"endColumn":38},{"ruleId":"745","severity":1,"message":"825","line":2,"column":40,"nodeType":"747","messageId":"748","endLine":2,"endColumn":48},{"ruleId":"745","severity":1,"message":"786","line":3,"column":9,"nodeType":"747","messageId":"748","endLine":3,"endColumn":20},{"ruleId":"745","severity":1,"message":"826","line":4,"column":8,"nodeType":"747","messageId":"748","endLine":4,"endColumn":24},{"ruleId":"745","severity":1,"message":"827","line":7,"column":8,"nodeType":"747","messageId":"748","endLine":7,"endColumn":18},{"ruleId":"745","severity":1,"message":"828","line":18,"column":8,"nodeType":"747","messageId":"748","endLine":18,"endColumn":12},{"ruleId":"745","severity":1,"message":"829","line":19,"column":8,"nodeType":"747","messageId":"748","endLine":19,"endColumn":16},{"ruleId":"745","severity":1,"message":"830","line":20,"column":8,"nodeType":"747","messageId":"748","endLine":20,"endColumn":20},{"ruleId":"745","severity":1,"message":"831","line":21,"column":8,"nodeType":"747","messageId":"748","endLine":21,"endColumn":31},{"ruleId":"745","severity":1,"message":"832","line":22,"column":8,"nodeType":"747","messageId":"748","endLine":22,"endColumn":20},{"ruleId":"745","severity":1,"message":"833","line":23,"column":8,"nodeType":"747","messageId":"748","endLine":23,"endColumn":21},{"ruleId":"745","severity":1,"message":"834","line":24,"column":8,"nodeType":"747","messageId":"748","endLine":24,"endColumn":14},{"ruleId":"745","severity":1,"message":"835","line":25,"column":8,"nodeType":"747","messageId":"748","endLine":25,"endColumn":16},{"ruleId":"745","severity":1,"message":"836","line":26,"column":8,"nodeType":"747","messageId":"748","endLine":26,"endColumn":21},{"ruleId":"745","severity":1,"message":"837","line":27,"column":8,"nodeType":"747","messageId":"748","endLine":27,"endColumn":12},{"ruleId":"745","severity":1,"message":"813","line":1,"column":8,"nodeType":"747","messageId":"748","endLine":1,"endColumn":13},{"ruleId":"745","severity":1,"message":"824","line":2,"column":28,"nodeType":"747","messageId":"748","endLine":2,"endColumn":38},{"ruleId":"745","severity":1,"message":"825","line":2,"column":40,"nodeType":"747","messageId":"748","endLine":2,"endColumn":48},{"ruleId":"745","severity":1,"message":"786","line":3,"column":9,"nodeType":"747","messageId":"748","endLine":3,"endColumn":20},{"ruleId":"745","severity":1,"message":"826","line":4,"column":8,"nodeType":"747","messageId":"748","endLine":4,"endColumn":24},{"ruleId":"745","severity":1,"message":"827","line":7,"column":8,"nodeType":"747","messageId":"748","endLine":7,"endColumn":18},{"ruleId":"745","severity":1,"message":"828","line":18,"column":8,"nodeType":"747","messageId":"748","endLine":18,"endColumn":12},{"ruleId":"745","severity":1,"message":"829","line":19,"column":8,"nodeType":"747","messageId":"748","endLine":19,"endColumn":16},{"ruleId":"745","severity":1,"message":"830","line":20,"column":8,"nodeType":"747","messageId":"748","endLine":20,"endColumn":20},{"ruleId":"745","severity":1,"message":"831","line":21,"column":8,"nodeType":"747","messageId":"748","endLine":21,"endColumn":31},{"ruleId":"745","severity":1,"message":"832","line":22,"column":8,"nodeType":"747","messageId":"748","endLine":22,"endColumn":20},{"ruleId":"745","severity":1,"message":"833","line":23,"column":8,"nodeType":"747","messageId":"748","endLine":23,"endColumn":21},{"ruleId":"745","severity":1,"message":"834","line":24,"column":8,"nodeType":"747","messageId":"748","endLine":24,"endColumn":14},{"ruleId":"745","severity":1,"message":"835","line":25,"column":8,"nodeType":"747","messageId":"748","endLine":25,"endColumn":16},{"ruleId":"745","severity":1,"message":"836","line":26,"column":8,"nodeType":"747","messageId":"748","endLine":26,"endColumn":21},{"ruleId":"745","severity":1,"message":"837","line":27,"column":8,"nodeType":"747","messageId":"748","endLine":27,"endColumn":12},{"ruleId":"745","severity":1,"message":"838","line":74,"column":27,"nodeType":"747","messageId":"748","endLine":74,"endColumn":35},{"ruleId":"745","severity":1,"message":"813","line":1,"column":8,"nodeType":"747","messageId":"748","endLine":1,"endColumn":13},{"ruleId":"745","severity":1,"message":"824","line":2,"column":28,"nodeType":"747","messageId":"748","endLine":2,"endColumn":38},{"ruleId":"745","severity":1,"message":"786","line":3,"column":9,"nodeType":"747","messageId":"748","endLine":3,"endColumn":20},{"ruleId":"745","severity":1,"message":"839","line":51,"column":55,"nodeType":"747","messageId":"748","endLine":51,"endColumn":61},{"ruleId":"745","severity":1,"message":"840","line":51,"column":62,"nodeType":"747","messageId":"748","endLine":51,"endColumn":68},{"ruleId":"745","severity":1,"message":"841","line":52,"column":12,"nodeType":"747","messageId":"748","endLine":52,"endColumn":20},{"ruleId":"745","severity":1,"message":"842","line":59,"column":14,"nodeType":"747","messageId":"748","endLine":59,"endColumn":23},{"ruleId":"745","severity":1,"message":"843","line":63,"column":14,"nodeType":"747","messageId":"748","endLine":63,"endColumn":22},{"ruleId":"745","severity":1,"message":"746","line":11,"column":30,"nodeType":"747","messageId":"748","endLine":11,"endColumn":38},{"ruleId":"745","severity":1,"message":"749","line":12,"column":8,"nodeType":"747","messageId":"748","endLine":12,"endColumn":33},{"ruleId":"745","severity":1,"message":"750","line":13,"column":8,"nodeType":"747","messageId":"748","endLine":13,"endColumn":31},{"ruleId":"745","severity":1,"message":"755","line":1,"column":9,"nodeType":"747","messageId":"748","endLine":1,"endColumn":20},{"ruleId":"745","severity":1,"message":"756","line":1,"column":48,"nodeType":"747","messageId":"748","endLine":1,"endColumn":54},{"ruleId":"745","severity":1,"message":"757","line":53,"column":9,"nodeType":"747","messageId":"748","endLine":53,"endColumn":16},{"ruleId":"745","severity":1,"message":"758","line":56,"column":9,"nodeType":"747","messageId":"748","endLine":56,"endColumn":13},{"ruleId":"745","severity":1,"message":"759","line":58,"column":46,"nodeType":"747","messageId":"748","endLine":58,"endColumn":56},{"ruleId":"760","severity":1,"message":"761","line":75,"column":6,"nodeType":"762","endLine":75,"endColumn":13,"suggestions":"844"},{"ruleId":"745","severity":1,"message":"764","line":98,"column":22,"nodeType":"747","messageId":"748","endLine":98,"endColumn":36},{"ruleId":"745","severity":1,"message":"765","line":98,"column":47,"nodeType":"747","messageId":"748","endLine":98,"endColumn":61},{"ruleId":"766","severity":1,"message":"767","line":102,"column":19,"nodeType":"768","messageId":"769","endLine":102,"endColumn":21},{"ruleId":"745","severity":1,"message":"778","line":3,"column":5,"nodeType":"747","messageId":"748","endLine":3,"endColumn":13},{"ruleId":"745","severity":1,"message":"779","line":6,"column":5,"nodeType":"747","messageId":"748","endLine":6,"endColumn":21},{"ruleId":"745","severity":1,"message":"780","line":20,"column":9,"nodeType":"747","messageId":"748","endLine":20,"endColumn":23},{"ruleId":"745","severity":1,"message":"781","line":70,"column":15,"nodeType":"747","messageId":"748","endLine":70,"endColumn":23},{"ruleId":"745","severity":1,"message":"776","line":76,"column":23,"nodeType":"747","messageId":"748","endLine":76,"endColumn":34},{"ruleId":"745","severity":1,"message":"777","line":77,"column":23,"nodeType":"747","messageId":"748","endLine":77,"endColumn":28},{"ruleId":"766","severity":1,"message":"767","line":33,"column":85,"nodeType":"768","messageId":"769","endLine":33,"endColumn":87},{"ruleId":"745","severity":1,"message":"770","line":11,"column":5,"nodeType":"747","messageId":"748","endLine":11,"endColumn":13},{"ruleId":"745","severity":1,"message":"771","line":15,"column":5,"nodeType":"747","messageId":"748","endLine":15,"endColumn":13},{"ruleId":"745","severity":1,"message":"772","line":62,"column":12,"nodeType":"747","messageId":"748","endLine":62,"endColumn":16},{"ruleId":"745","severity":1,"message":"773","line":62,"column":18,"nodeType":"747","messageId":"748","endLine":62,"endColumn":25},{"ruleId":"745","severity":1,"message":"774","line":63,"column":12,"nodeType":"747","messageId":"748","endLine":63,"endColumn":25},{"ruleId":"745","severity":1,"message":"775","line":63,"column":27,"nodeType":"747","messageId":"748","endLine":63,"endColumn":44},{"ruleId":"745","severity":1,"message":"776","line":126,"column":19,"nodeType":"747","messageId":"748","endLine":126,"endColumn":30},{"ruleId":"745","severity":1,"message":"777","line":127,"column":19,"nodeType":"747","messageId":"748","endLine":127,"endColumn":24},{"ruleId":"745","severity":1,"message":"782","line":1,"column":26,"nodeType":"747","messageId":"748","endLine":1,"endColumn":36},{"ruleId":"745","severity":1,"message":"783","line":20,"column":11,"nodeType":"747","messageId":"748","endLine":20,"endColumn":19},{"ruleId":"745","severity":1,"message":"782","line":1,"column":26,"nodeType":"747","messageId":"748","endLine":1,"endColumn":36},{"ruleId":"745","severity":1,"message":"784","line":9,"column":9,"nodeType":"747","messageId":"748","endLine":9,"endColumn":20},{"ruleId":"745","severity":1,"message":"789","line":69,"column":9,"nodeType":"747","messageId":"748","endLine":69,"endColumn":17},{"ruleId":"745","severity":1,"message":"783","line":71,"column":11,"nodeType":"747","messageId":"748","endLine":71,"endColumn":19},{"ruleId":"760","severity":1,"message":"787","line":133,"column":8,"nodeType":"762","endLine":133,"endColumn":10,"suggestions":"845"},{"ruleId":"745","severity":1,"message":"785","line":9,"column":5,"nodeType":"747","messageId":"748","endLine":9,"endColumn":14},{"ruleId":"745","severity":1,"message":"786","line":17,"column":9,"nodeType":"747","messageId":"748","endLine":17,"endColumn":20},{"ruleId":"745","severity":1,"message":"784","line":18,"column":9,"nodeType":"747","messageId":"748","endLine":18,"endColumn":20},{"ruleId":"760","severity":1,"message":"787","line":126,"column":8,"nodeType":"762","endLine":126,"endColumn":10,"suggestions":"846"},{"ruleId":"766","severity":1,"message":"767","line":32,"column":85,"nodeType":"768","messageId":"769","endLine":32,"endColumn":87},{"ruleId":"745","severity":1,"message":"794","line":1,"column":9,"nodeType":"747","messageId":"748","endLine":1,"endColumn":15},{"ruleId":"745","severity":1,"message":"782","line":1,"column":17,"nodeType":"747","messageId":"748","endLine":1,"endColumn":27},{"ruleId":"745","severity":1,"message":"795","line":4,"column":9,"nodeType":"747","messageId":"748","endLine":4,"endColumn":17},{"ruleId":"745","severity":1,"message":"797","line":62,"column":12,"nodeType":"747","messageId":"748","endLine":62,"endColumn":18},{"ruleId":"745","severity":1,"message":"798","line":72,"column":12,"nodeType":"747","messageId":"748","endLine":72,"endColumn":20},{"ruleId":"745","severity":1,"message":"799","line":72,"column":22,"nodeType":"747","messageId":"748","endLine":72,"endColumn":33},{"ruleId":"745","severity":1,"message":"791","line":17,"column":12,"nodeType":"747","messageId":"748","endLine":17,"endColumn":24},{"ruleId":"766","severity":1,"message":"767","line":98,"column":26,"nodeType":"768","messageId":"769","endLine":98,"endColumn":28},{"ruleId":"760","severity":1,"message":"792","line":105,"column":3,"nodeType":"762","endLine":105,"endColumn":24,"suggestions":"847"},{"ruleId":"800","severity":1,"message":"801","line":10,"column":1,"nodeType":"802","endLine":13,"endColumn":2},{"ruleId":"745","severity":1,"message":"782","line":8,"column":5,"nodeType":"747","messageId":"748","endLine":8,"endColumn":15},{"ruleId":"745","severity":1,"message":"784","line":14,"column":9,"nodeType":"747","messageId":"748","endLine":14,"endColumn":20},{"ruleId":"745","severity":1,"message":"786","line":17,"column":9,"nodeType":"747","messageId":"748","endLine":17,"endColumn":20},{"ruleId":"745","severity":1,"message":"796","line":31,"column":12,"nodeType":"747","messageId":"748","endLine":31,"endColumn":20},{"ruleId":"766","severity":1,"message":"767","line":63,"column":39,"nodeType":"768","messageId":"769","endLine":63,"endColumn":41},{"ruleId":"745","severity":1,"message":"803","line":61,"column":12,"nodeType":"747","messageId":"748","endLine":61,"endColumn":16},{"ruleId":"745","severity":1,"message":"777","line":61,"column":18,"nodeType":"747","messageId":"748","endLine":61,"endColumn":23},{"ruleId":"745","severity":1,"message":"759","line":63,"column":50,"nodeType":"747","messageId":"748","endLine":63,"endColumn":60},{"ruleId":"745","severity":1,"message":"804","line":65,"column":11,"nodeType":"747","messageId":"748","endLine":65,"endColumn":25},{"ruleId":"766","severity":1,"message":"767","line":65,"column":40,"nodeType":"768","messageId":"769","endLine":65,"endColumn":42},{"ruleId":"766","severity":1,"message":"767","line":65,"column":65,"nodeType":"768","messageId":"769","endLine":65,"endColumn":67},{"ruleId":"745","severity":1,"message":"805","line":66,"column":11,"nodeType":"747","messageId":"748","endLine":66,"endColumn":24},{"ruleId":"766","severity":1,"message":"767","line":90,"column":41,"nodeType":"768","messageId":"769","endLine":90,"endColumn":43},{"ruleId":"745","severity":1,"message":"777","line":6,"column":7,"nodeType":"747","messageId":"748","endLine":6,"endColumn":12},{"ruleId":"800","severity":1,"message":"806","line":149,"column":1,"nodeType":"802","endLine":149,"endColumn":108},{"ruleId":"745","severity":1,"message":"807","line":3,"column":7,"nodeType":"747","messageId":"748","endLine":3,"endColumn":17},{"ruleId":"745","severity":1,"message":"782","line":1,"column":26,"nodeType":"747","messageId":"748","endLine":1,"endColumn":36},{"ruleId":"745","severity":1,"message":"808","line":5,"column":8,"nodeType":"747","messageId":"748","endLine":5,"endColumn":16},{"ruleId":"745","severity":1,"message":"809","line":6,"column":8,"nodeType":"747","messageId":"748","endLine":6,"endColumn":17},{"ruleId":"745","severity":1,"message":"810","line":7,"column":8,"nodeType":"747","messageId":"748","endLine":7,"endColumn":16},{"ruleId":"760","severity":1,"message":"811","line":133,"column":8,"nodeType":"762","endLine":133,"endColumn":10,"suggestions":"848"},{"ruleId":"766","severity":1,"message":"767","line":5,"column":23,"nodeType":"768","messageId":"769","endLine":5,"endColumn":25},{"ruleId":"745","severity":1,"message":"822","line":3,"column":9,"nodeType":"747","messageId":"748","endLine":3,"endColumn":14},{"ruleId":"745","severity":1,"message":"823","line":6,"column":38,"nodeType":"747","messageId":"748","endLine":6,"endColumn":54},{"ruleId":"766","severity":1,"message":"767","line":21,"column":31,"nodeType":"768","messageId":"769","endLine":21,"endColumn":33},{"ruleId":"745","severity":1,"message":"813","line":5,"column":5,"nodeType":"747","messageId":"748","endLine":5,"endColumn":10},{"ruleId":"745","severity":1,"message":"814","line":10,"column":5,"nodeType":"747","messageId":"748","endLine":10,"endColumn":19},{"ruleId":"745","severity":1,"message":"815","line":12,"column":5,"nodeType":"747","messageId":"748","endLine":12,"endColumn":16},{"ruleId":"745","severity":1,"message":"816","line":14,"column":9,"nodeType":"747","messageId":"748","endLine":14,"endColumn":28},{"ruleId":"745","severity":1,"message":"817","line":15,"column":9,"nodeType":"747","messageId":"748","endLine":15,"endColumn":24},{"ruleId":"745","severity":1,"message":"818","line":19,"column":8,"nodeType":"747","messageId":"748","endLine":19,"endColumn":11},{"ruleId":"745","severity":1,"message":"819","line":20,"column":8,"nodeType":"747","messageId":"748","endLine":20,"endColumn":25},{"ruleId":"760","severity":1,"message":"820","line":100,"column":8,"nodeType":"762","endLine":100,"endColumn":10,"suggestions":"849"},{"ruleId":"766","severity":1,"message":"767","line":66,"column":30,"nodeType":"768","messageId":"769","endLine":66,"endColumn":32},{"ruleId":"766","severity":1,"message":"767","line":67,"column":30,"nodeType":"768","messageId":"769","endLine":67,"endColumn":32},{"ruleId":"766","severity":1,"message":"767","line":68,"column":40,"nodeType":"768","messageId":"769","endLine":68,"endColumn":42},{"ruleId":"766","severity":1,"message":"767","line":69,"column":34,"nodeType":"768","messageId":"769","endLine":69,"endColumn":36},{"ruleId":"745","severity":1,"message":"813","line":1,"column":8,"nodeType":"747","messageId":"748","endLine":1,"endColumn":13},{"ruleId":"745","severity":1,"message":"824","line":2,"column":28,"nodeType":"747","messageId":"748","endLine":2,"endColumn":38},{"ruleId":"745","severity":1,"message":"825","line":2,"column":40,"nodeType":"747","messageId":"748","endLine":2,"endColumn":48},{"ruleId":"745","severity":1,"message":"786","line":3,"column":9,"nodeType":"747","messageId":"748","endLine":3,"endColumn":20},{"ruleId":"745","severity":1,"message":"826","line":4,"column":8,"nodeType":"747","messageId":"748","endLine":4,"endColumn":24},{"ruleId":"745","severity":1,"message":"827","line":7,"column":8,"nodeType":"747","messageId":"748","endLine":7,"endColumn":18},{"ruleId":"745","severity":1,"message":"828","line":18,"column":8,"nodeType":"747","messageId":"748","endLine":18,"endColumn":12},{"ruleId":"745","severity":1,"message":"829","line":19,"column":8,"nodeType":"747","messageId":"748","endLine":19,"endColumn":16},{"ruleId":"745","severity":1,"message":"830","line":20,"column":8,"nodeType":"747","messageId":"748","endLine":20,"endColumn":20},{"ruleId":"745","severity":1,"message":"831","line":21,"column":8,"nodeType":"747","messageId":"748","endLine":21,"endColumn":31},{"ruleId":"745","severity":1,"message":"832","line":22,"column":8,"nodeType":"747","messageId":"748","endLine":22,"endColumn":20},{"ruleId":"745","severity":1,"message":"833","line":23,"column":8,"nodeType":"747","messageId":"748","endLine":23,"endColumn":21},{"ruleId":"745","severity":1,"message":"834","line":24,"column":8,"nodeType":"747","messageId":"748","endLine":24,"endColumn":14},{"ruleId":"745","severity":1,"message":"835","line":25,"column":8,"nodeType":"747","messageId":"748","endLine":25,"endColumn":16},{"ruleId":"745","severity":1,"message":"836","line":26,"column":8,"nodeType":"747","messageId":"748","endLine":26,"endColumn":21},{"ruleId":"745","severity":1,"message":"837","line":27,"column":8,"nodeType":"747","messageId":"748","endLine":27,"endColumn":12},{"ruleId":"745","severity":1,"message":"813","line":1,"column":8,"nodeType":"747","messageId":"748","endLine":1,"endColumn":13},{"ruleId":"745","severity":1,"message":"824","line":2,"column":28,"nodeType":"747","messageId":"748","endLine":2,"endColumn":38},{"ruleId":"745","severity":1,"message":"825","line":2,"column":40,"nodeType":"747","messageId":"748","endLine":2,"endColumn":48},{"ruleId":"745","severity":1,"message":"786","line":3,"column":9,"nodeType":"747","messageId":"748","endLine":3,"endColumn":20},{"ruleId":"745","severity":1,"message":"826","line":4,"column":8,"nodeType":"747","messageId":"748","endLine":4,"endColumn":24},{"ruleId":"745","severity":1,"message":"827","line":7,"column":8,"nodeType":"747","messageId":"748","endLine":7,"endColumn":18},{"ruleId":"745","severity":1,"message":"828","line":18,"column":8,"nodeType":"747","messageId":"748","endLine":18,"endColumn":12},{"ruleId":"745","severity":1,"message":"829","line":19,"column":8,"nodeType":"747","messageId":"748","endLine":19,"endColumn":16},{"ruleId":"745","severity":1,"message":"830","line":20,"column":8,"nodeType":"747","messageId":"748","endLine":20,"endColumn":20},{"ruleId":"745","severity":1,"message":"831","line":21,"column":8,"nodeType":"747","messageId":"748","endLine":21,"endColumn":31},{"ruleId":"745","severity":1,"message":"832","line":22,"column":8,"nodeType":"747","messageId":"748","endLine":22,"endColumn":20},{"ruleId":"745","severity":1,"message":"833","line":23,"column":8,"nodeType":"747","messageId":"748","endLine":23,"endColumn":21},{"ruleId":"745","severity":1,"message":"834","line":24,"column":8,"nodeType":"747","messageId":"748","endLine":24,"endColumn":14},{"ruleId":"745","severity":1,"message":"835","line":25,"column":8,"nodeType":"747","messageId":"748","endLine":25,"endColumn":16},{"ruleId":"745","severity":1,"message":"836","line":26,"column":8,"nodeType":"747","messageId":"748","endLine":26,"endColumn":21},{"ruleId":"745","severity":1,"message":"837","line":27,"column":8,"nodeType":"747","messageId":"748","endLine":27,"endColumn":12},{"ruleId":"745","severity":1,"message":"838","line":74,"column":27,"nodeType":"747","messageId":"748","endLine":74,"endColumn":35},{"ruleId":"745","severity":1,"message":"813","line":1,"column":8,"nodeType":"747","messageId":"748","endLine":1,"endColumn":13},{"ruleId":"745","severity":1,"message":"824","line":2,"column":28,"nodeType":"747","messageId":"748","endLine":2,"endColumn":38},{"ruleId":"745","severity":1,"message":"786","line":3,"column":9,"nodeType":"747","messageId":"748","endLine":3,"endColumn":20},{"ruleId":"745","severity":1,"message":"839","line":51,"column":55,"nodeType":"747","messageId":"748","endLine":51,"endColumn":61},{"ruleId":"745","severity":1,"message":"840","line":51,"column":62,"nodeType":"747","messageId":"748","endLine":51,"endColumn":68},{"ruleId":"745","severity":1,"message":"841","line":52,"column":12,"nodeType":"747","messageId":"748","endLine":52,"endColumn":20},{"ruleId":"745","severity":1,"message":"842","line":59,"column":14,"nodeType":"747","messageId":"748","endLine":59,"endColumn":23},{"ruleId":"745","severity":1,"message":"843","line":63,"column":14,"nodeType":"747","messageId":"748","endLine":63,"endColumn":22},"no-unused-vars","'UINavBar' is defined but never used.","Identifier","unusedVar","'LoadingIndicatorComponent' is defined but never used.","'ConfirmMessageComponent' is defined but never used.","no-native-reassign",["850"],"no-negated-in-lhs",["851"],"'CssBaseline' is defined but never used.","'Router' is defined but never used.","'classes' is assigned a value but never used.","'auth' is assigned a value but never used.","'isApproved' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["852"],"'acceptCallback' is assigned a value but never used.","'rejectCallback' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MuiAlert' is defined but never used.","'Snackbar' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'error_message' is assigned a value but never used.","'set_error_message' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'token' is assigned a value but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'clearAuthToken' is defined but never used.","'loginUrl' is assigned a value but never used.","'makeStyles' is defined but never used.","'dispatch' is assigned a value but never used.","'useDispatch' is defined but never used.","'TextField' is defined but never used.","'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["853"],"'location' is assigned a value but never used.",["854"],"'pendingUsers' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'pendingUsersLoaded'. Either include them or remove the dependency array.",["855"],"'Button' is defined but never used.","'Fragment' is defined but never used.","'disabled' is assigned a value but never used.","'shrink' is assigned a value but never used.","'isAgreed' is assigned a value but never used.","'setIsAgreed' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'user' is assigned a value but never used.","'isNotAuthority' is assigned a value but never used.","'isNotLoggedIn' is assigned a value but never used.","Assign object to a variable before exporting as module default","'apiVersion' is assigned a value but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'TestFlow' is defined but never used.","React Hook useEffect has a missing dependency: 'reloadTests'. Either include it or remove the dependency array.",["856"],"'Paper' is defined but never used.","'TableContainer' is defined but never used.","'useSelector' is defined but never used.","'doGetMyTestRequests' is defined but never used.","'appNotification' is defined but never used.","'Box' is defined but never used.","'TestRequestDetail' is defined but never used.","React Hook useEffect has a missing dependency: 'reloadRows'. Either include it or remove the dependency array.",["857"],"'LOGIN' is defined but never used.","'downloadDocument' is defined but never used.","'useHistory' is defined but never used.","'useState' is defined but never used.","'ChevronRightIcon' is defined but never used.","'Typography' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'ListSubheader' is defined but never used.","'Switch' is defined but never used.","'WifiIcon' is defined but never used.","'BluetoothIcon' is defined but never used.","'Grid' is defined but never used.","'comments' is assigned a value but never used.","'status' is assigned a value but never used.","'gender' is assigned a value but never used.","'userName' is assigned a value but never used.","'sendEmail' is defined but never used.","'callUser' is defined but never used.",["858"],["859"],["860"],["861"],["862"],["863"],"no-global-assign","no-unsafe-negation",{"desc":"864","fix":"865"},{"desc":"866","fix":"867"},{"desc":"866","fix":"868"},{"desc":"869","fix":"870"},{"desc":"871","fix":"872"},{"desc":"873","fix":"874"},{"desc":"864","fix":"875"},{"desc":"866","fix":"876"},{"desc":"866","fix":"877"},{"desc":"869","fix":"878"},{"desc":"871","fix":"879"},{"desc":"873","fix":"880"},"Update the dependencies array to be: [token, user]",{"range":"881","text":"882"},"Update the dependencies array to be: [id]",{"range":"883","text":"884"},{"range":"885","text":"884"},"Update the dependencies array to be: [dispatch, pendingUserGridData, pendingUsersLoaded]",{"range":"886","text":"887"},"Update the dependencies array to be: [reloadTests]",{"range":"888","text":"889"},"Update the dependencies array to be: [reloadRows]",{"range":"890","text":"891"},{"range":"892","text":"882"},{"range":"893","text":"884"},{"range":"894","text":"884"},{"range":"895","text":"887"},{"range":"896","text":"889"},{"range":"897","text":"891"},[2126,2133],"[token, user]",[2711,2713],"[id]",[3239,3241],[2723,2744],"[dispatch, pendingUserGridData, pendingUsersLoaded]",[3369,3371],"[reloadTests]",[2090,2092],"[reloadRows]",[2126,2133],[3239,3241],[2711,2713],[2723,2744],[3369,3371],[2090,2092]]